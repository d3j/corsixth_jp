--[[ Copyright (c) 2012 lwglwsss

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE. --]]

-- Note: This file contains UTF-8 text. Make sure your editor is set to UTF-8.

Font("unicode")
Language("日本語", "Japanese", "ja", "jp")
Inherit("english")
Encoding(utf8)


-------------------------------  ORIG STRINGS  ------------------------------
-- from debug-strings-new-grouped.txt(orig TH + Corsix TH eng strings)
-----------------------------------------------------------------------------

misc = {
  hospital_open = "Hospital Open",
  save_success = "Game Saved Okay",
  save_failed = "ERROR: Could Not Save Game",
  low_res = "Low Res",
  no_heliport = "Either no diseases have been discovered yet, or there is no heliport on this map.  It might be that you need to build a reception desk and hire a receptionist",
  grade_adverb = {
    extremely = "extremely",
    mildly = "mildly",
    moderately = "moderately",
  },
  not_yet_implemented = "(not yet implemented)",
  send_message = "Send Message to Player %d",
  out_of_sync = "Game Out Of Sync",
  balance = "Balance File:",
  load_failed = "Save Game Not Loaded",
  mouse = "Mouse",
  done = "All Done",
  force = "Force",
  pause = "Pause",
  send_message_all = "Send Message to All Players",
}
handyman_window = {
  all_parcels = "All parcels",
  parcel = "Parcel",
}
staff_list = {
  morale = "MORALE",
  tiredness = "TIREDNESS",
  skill = "SKILL",
  total_wages = "TOTAL WAGES",
}
research = {
  allocated_amount = "Allocated Amount",
  funds_allocation = "Funds Allocation",
  categories = {
    improvements = "Improvements",
    drugs = "Drug Research",
    diagnosis = "Diagnosis Equipment",
    cure = "Cure Equipment",
    specialisation = "Specialisation",
  },
}
debug_patient_window = {
  caption = "Debug Patient",
}
totd_window = {
  previous = "Previous Tip",
  tips = {
    [1] = "Every hospital needs a reception desk and a GP's office to get going. After that, it depends on what kind of patients are visiting your hospital. A pharmacy is always a good choice, though.",
    [2] = "Machines such as the Inflation need maintenance. Employ a handyman or two to repair your machines, or you'll risk your staff and patients getting hurt.",
    [3] = "After a while, your staff will get tired. Be sure to build a staff room, so they can relax.",
    [4] = "Place enough radiators to keep your staff and patients warm, or they will become unhappy. Use the town map to locate any spots in your hospital that need more heating.",
    [5] = "A doctor's skill level greatly influences the quality and speed of his diagnoses. Place a skilled doctor in your GP's office, and you won't need as many additional diagnosis rooms.",
    [6] = "Juniors and doctors can improve their skills by learning from a consultant in the training room. If the consultant has a special qualification (surgeon, psychiatrist or researcher), he will also pass on this knowledge to his pupil(s).",
    [7] = "Did you try to enter the European emergency number (112) into the fax machine? Make sure your sound is on!",
    [8] = "You can adjust some settings such as the resolution and language in the options window found both in the main menu and ingame.",
    [9] = "You selected a language other than English, but there's English text all over the place? Help us by translating missing texts into your language!",
    [10] = "The CorsixTH team is looking for reinforcements! Are you interested in coding, translating or creating graphics for CorsixTH? Contact us at our Forum, Mailing List or IRC Channel (corsix-th at freenode).",
    [11] = "If you find a bug, please report it at our bugtracker: th-issues.corsix.org",
    [12] = "Each level has certain requirements to fulfill before you can move on to the next one. Check the status window to see your progression towards the level goals.",
    [13] = "If you want to edit or remove an existing room, you can do so with the edit room button found in the bottom toolbar.",
    [14] = "In a horde of waiting patients, you can quickly find out which ones are waiting for a particular room by hovering over that room with your mouse cursor.",
    [15] = "Click on the door of a room to see its queue. You can do useful fine tuning here, such as reordering the queue or sending a patient to another room.",
    [16] = "Unhappy staff will ask for salary rises frequently. Make sure your staff is working in a comfortable environment to keep that from happening.",
    [17] = "Patients will get thirsty while waiting in your hospital, even more so if you turn up the heating! Place vending machines in strategic positions for some extra income.",
    [18] = "You can abort the diagnosis progress for a patient prematurely and guess the cure, if you already encountered the disease. Beware that this may increase the risk of a wrong cure, resulting in death for the patient.",
    [19] = "Emergencies can be a good source for some extra cash, provided that you have enough capacities to handle the emergency patients in time.",
  },
  next = "Next Tip",
}
queue_window = {
  num_in_queue = "Queue Size",
  num_entered = "Visitor Count",
  max_queue_size = "Max Size",
  num_expected = "Expected",
}
staff_class = {
  doctor = "Doctor",
  handyman = "Handyman",
  receptionist = "Receptionist",
  nurse = "Nurse",
  surgeon = "Surgeon",
}
tooltip = {
  hire_staff_window = {
    prev_person = "View previous person",
    cancel = "Cancel",
    psychiatrist = "Psychiatrist",
    salary = "Salary",
    next_person = "View next person",
    nurses = "View Nurses available for hire",
    surgeon = "Surgeon",
    handymen = "View Handymen available for hire",
    doctors = "View Doctors available for hire",
    doctor_seniority = "Doctor's seniority (Junior, Doctor, Consultant)",
    hire = "Hire person",
    researcher = "Researcher",
    qualifications = "Doctor's Extra Qualifications",
    receptionists = "View Receptionists available for hire",
    staff_ability = "Staff ability",
  },
  handyman_window = {
    parcel_select = "The parcel where the handyman accepts tasks, click to change setting",
    close = "Cancel requester",
    ability = "Ability",
    face = "Handyman's face",
    prio_machines = "Increase Handyman's priority for fixing machinery",
    prio_litter = "Increase Handyman's priority for sweeping litter",
    happiness = "Happiness",
    prio_plants = "Increase Handyman's priority for watering plants",
    name = "Handyman's name",
    tiredness = "Tiredness",
    center_view = "Zoom to Handyman",
    salary = "Salary",
    sack = "Sack",
    pick_up = "Pick up",
  },
  staff_list = {
    ability_2 = "Employee's Ability Level",
    next_person = "Show next page",
    detail = "Attention to Detail",
    happiness = "Shows how satisfied these employees are",
    researcher_train = "%d%% trained towards becoming a Researcher",
    handymen = "See list of Handymen employed at this hospital",
    tiredness = "Shows how tired these employees are",
    researcher = "Qualified Researcher",
    happiness_2 = "Employee's Morale",
    pay_rise = "Raise this person's salary by 10%",
    bonus = "Pay this individual a 10% bonus",
    prev_person = "Show previous page",
    nurses = "See list of Nurses employed at this hospital",
    psychiatrist = "Qualified Psychiatrist",
    salary = "Current salary paid to this individual",
    ability = "Shows ability level of these employees",
    close = "Exit and return to game",
    sack = "Sack this person",
    surgeon = "Qualified Surgeon",
    tiredness_2 = "Employee's Tiredness",
    doctors = "See list of Doctors employed at this hospital",
    doctor_seniority = "Seniority of Doctor",
    view_staff = "View person at work",
    surgeon_train = "%d%% trained towards becoming a Surgeon",
    skills = "Extra skills",
    receptionists = "See list of Receptionists employed at this hospital",
    psychiatrist_train = "%d%% trained towards becoming a Psychiatrist",
  },
  research = {
    cure_inc = "Increase Research percentage",
    close = "Close Research screen",
    specialisation_dec = "Decrease Special Research percentage",
    diagnosis_dec = "Decrease Research percentage",
    allocated_amount = "Amount of budget allocated",
    improvements_inc = "Increase Improvements percentage",
    drugs_dec = "Decrease Drugs percentage",
    drugs_inc = "Increase Drugs research percentage",
    cure_dec = "Decrease Cure percentage",
    specialisation_inc = "Increase Special Research percentage",
    improvements_dec = "Decrease Improvements percentage",
    diagnosis_inc = "Increase Equipment research percentage",
  },
  machine_window = {
    repair = "Page Handyman to fix hardware",
    name = "Name",
    close = "Cancel requester",
    times_used = "Number of times hardware used",
    status = "Status of hardware",
    replace = "Replace hardware",
  },
  place_objects_window = {
    confirm = "Confirm",
    cancel = "Cancel",
    pick_up = "Pick up object",
    buy_sell = "Buy/sell objects",
  },
  totd_window = {
    previous = "Display the previous tip",
    next = "Display the next tip",
  },
  status = {
    percentage_cured = "You need to have treated %d%% of the visitors to your hospital. Currently you have treated %d%%",
    thirst = "Overall thirst level of people in your hospital",
    close = "Close Overview screen",
    population_chart = "Chart showing what proportion of local population each hospital is attracting",
    win_progress_own = "Show progress towards win criteria for your own hospital",
    reputation = "Your Reputation should not be less than %d. Currently it's %d",
    population = "You need to have %d%% of the overall population coming to your hospital",
    warmth = "Overall warmth level of people in your hospital",
    percentage_killed = "This objective is to kill fewer than %d%% of your visitors. So far you've killed %d%% of them",
    balance = "Your bank balance should not be less than %d. Currently it's %d",
    value = "Your hospital must be worth $%d. So far it's worth $%d",
    win_progress_other = "Show progress towards win criteria for %s",
    num_cured = "This objective is to cure %d people. So far you've cured %d",
    happiness = "Overall happiness of people in your hospital",
  },
  queue_window = {
    end_of_queue = "Drag a patient to this icon to move them to the back of the queue",
    num_entered = "Number of patients who have been treated in this room so far",
    close = "Close this requester",
    num_in_queue = "Number of patients queuing",
    num_expected = "Number of patients Receptionist expects to join queue soon",
    front_of_queue = "Drag a patient to this icon to move them to the front of the queue",
    dec_queue_size = "Decrement maximum queue size",
    max_queue_size = "Maximum queue size Receptionist should try to allow",
    inc_queue_size = "Increment maximum queue size",
    patient = "Drag a patient to move them in the queue position. Right-click on a patient to send them home or refer them to a rival hospital",
    patient_dropdown = {
      send_home = "Discharge patient from hospital",
      hospital_2 = "Refer patient to another hospital",
      reception = "Send patient to Receptionist",
      hospital_1 = "Refer patient to another hospital",
      hospital_3 = "Refer patient to another hospital",
    },
  },
  jukebox = {
    rewind = "Rewind jukebox",
    loop = "Loop play jukebox",
    stop = "Stop jukebox",
    close = "Close jukebox",
    current_title = "Jukebox",
    play = "Play jukebox",
    fast_forward = "Fast Forward jukebox",
  },
  graphs = {
    deaths = "Toggle deaths",
    close = "Close Graph Screen",
    scale = "Graph scale",
    money_out = "Toggle money out",
    visitors = "Toggle visitors",
    wages = "Toggle wages",
    balance = "Toggle balance",
    money_in = "Toggle money in",
    cures = "Toggle cures",
    reputation = "Toggle Hospital Value",
  },
  toolbar = {
    reputation = "Your reputation",
    casebook = "Drug casebook",
    edit = "Edit rooms/items",
    staff_list = "Staff management",
    policy = "Policy",
    date = "The date",
    charts = "Charts",
    objects = "Furnish corridor",
    balance = "Your balance",
    research = "Research",
    hire = "Hire staff",
    status = "Status",
    town_map = "Town map",
    rooms = "Build rooms",
    bank_button = "Left Click for Bank Manager, Right Click for Bank Statement",
  },
  message = {
    button = "Left click to open message",
    button_dismiss = "Left click to open message, right click to dismiss it",
  },
  pay_rise_window = {
    accept = "Meet the pay demand",
    decline = "Don't pay up - sack them instead",
  },
  town_map = {
    close = "Exit town screen",
    plants = "Toggle plants",
    fire_extinguishers = "Toggle fire extinguishers",
    people = "Toggle people",
    balance = "Balance",
    heat_dec = "Decrease heat",
    heating_bill = "Heating bill",
    radiators = "Toggle radiators",
    objects = "Toggle objects",
    heat_level = "Heat level",
    heat_inc = "Increase heat",
  },
  custom_game_window = {
    start_game_with_name = "Load the level %s",
    free_build = "Tick this box if you want to play without money or winning and losing conditions",
  },
  cheats_window = {
    close = "Close the cheats dialog",
    cheats = {
      end_month = "Jumps to the end of the month.",
      create_patient = "Creates a Patient at the map border.",
      money = "Adds 10.000 to your bank balance.",
      emergency = "Creates an emergency.",
      win_level = "Win the current level.",
      vip = "Creates a VIP.",
      lose_level = "Lose the current level.",
      earthquake = "Creates an earthquake.",
      all_research = "Completes all research.",
      end_year = "Jumps to the end of the year.",
    },
  },
  casebook = {
    sent_home = "Number of patients turned away",
    cure_requirement = {
      hire_staff_old = "You need to employ a %s to handle this treatment",
      possible = "You can handle this treatment",
      not_possible = "You cannot yet handle this treatment",
      ward_hire_nurse = "You need a Nurse to work in a Ward to handle this treatment",
      hire_surgeon = "You need to employ a second Surgeon to perform operation",
      hire_staff = "You need to employ staff to handle this treatment",
      research_machine = "You need to research some hardware for this treatment",
      build_room = "You need to build a room to handle this treatment",
      build_ward = "You need to build a Ward to handle this treatment",
      hire_surgeons = "You need to employ two Surgeons to perform operations",
    },
    increase = "Increase amount",
    up = "Scroll up",
    reputation = "Cure or Diagnosis Reputation",
    research = "Click here to use Specialisation Research budget on this treatment",
    close = "Close Casebook",
    earned_money = "Total earned to date",
    cure_type = {
      psychiatrist = "The Psychiatrist performs this treatment",
      drug_percentage = "This treatment uses a drug - yours is %d%% effective",
      drug = "This treatment will use a drug",
      machine = "This treatment requires a machine",
      unknown = "You do not yet know how to treat this disease",
      surgery = "This disease requires an operation",
    },
    decrease = "Decrease amount",
    deaths = "Number of fatalities",
    cured = "Number of recoveries",
    down = "Scroll down",
    treatment_charge = "Cost",
  },
  policy = {
    diag_termination = "A patient's diagnosis will continue until Doctors are as certain as the STOP PROCEDURE percentage or until all the diagnosis machines have been tried",
    close = "Close Policy screen",
    staff_leave = "Click here to get staff who aren't busy to help colleagues who require it",
    diag_procedure = "If a Doctor's diagnosis is less certain than the SEND HOME percentage the patient will be sent home. If the diagnosis is better than the GUESS AT CURE percentage the patient will be sent for the appropriate treatment",
    staff_rest = "How tired staff must be before they can rest",
    staff_stay = "Click here to make certain staff stay in the rooms where you place them",
  },
  bank_manager = {
    graph = "Graph of payments expected from %s",
    close = "Close Bank Manager screen",
    hospital_value = "Current value of your hospital",
    graph_return = "Return to previous display",
    current_loan = "Current loans outstanding",
    borrow_5000 = "Borrow $5000 from the bank",
    balance = "Your bank balance",
    interest_payment = "Monthly interest payments",
    inflation_rate = "Annual inflation rate",
    interest_rate = "Annual interest rate",
    repay_5000 = "Repay $5000 to the bank",
    show_graph = "Show graph of expected payments from %s",
    insurance_owed = "Amount of money owed to you by %s",
  },
  main_menu = {
    exit = "No, no, please don't leave!",
    custom_level = "Build your hospital in a single scenario",
    network = "Start a network game",
    quit = "Quit",
    continue = "Continue previous game",
    options = "Tweak various settings",
    load_menu = {
      load_slot = "LOAD GAME",
      empty_slot = "EMPTY",
    },
    new_game = "Start the first level on the campaign",
    load_game = "Load a saved game",
  },
  patient_window = {
    graph = "Click to toggle between graph of person's health and their treatment history",
    casebook = "View details of person's illness",
    close = "Cancel requester",
    queue = "See details of this person's queue",
    happiness = "Person's happiness",
    warmth = "Person's warmth level",
    center_view = "Zoom game to person",
    thirst = "How thirsty person is",
    send_home = "Discharge person from hospital",
    abort_diagnosis = "Send person for cure now instead of waiting for diagnosis to be complete",
  },
  menu_list_window = {
    save_date = "Click here to sort the list by last modification date",
    name = "Click here to sort the list by name",
    back = "Close this window",
  },
  watch = {
    emergency = "Emergency: time remaining to cure all emergency patients.",
    hospital_opening = "Build time: this is the time remaining before your hospital is declared open. Clicking the GO button will open your hospital immediately.",
    epidemic = "Epidemic: time left to cover up epidemic. When this time expires OR a contagious patient leaves you hospital, a Health Inspector will visit. The button toggles the vaccinate mode on or off. Click on a patient to get them vaccinated by a Nurse.",
  },
  new_game_window = {
    hard = "If you are used to this kind of game and want more of a challenge, pick this option",
    cancel = "Oh, I didn't really mean to start a new game!",
    tutorial = "Tutorial",
    easy = "If you are new to simulation games this is the option for you",
    medium = "This is the middle way to go if you are unsure what to choose",
  },
  save_game_window = {
    new_save_game = "Enter name for a new savegame",
    save_game = "Overwrite savegame %s",
  },
  calls_dispatcher = {
    assigned = "This box is marked if someone is assigned to the corresponding task.",
    task = "List of tasks - click task to open assigned staff's window and scroll to location of task",
    close = "Close the calls dispatcher dialog",
  },
  research_policy = {
    research_progress = "Progress towards the next discovery in this category: %1%/%2%",
    no_research = "No research is being carried out in this category at the moment",
  },
  information = {
    close = "Close the information dialog",
  },
  lua_console = {
    textbox = "Enter Lua code to run here",
    execute_code = "Run the code you have entered",
    close = "Close the console",
  },
  staff_window = {
    doctor_seniority = "Rank - Junior, Doctor or Consultant",
    psychiatrist = "Psychiatrist",
    close = "Cancel requester",
    ability = "Ability level",
    pick_up = "Pick up",
    sack = "Sack",
    surgeon = "Surgeon",
    happiness = "Happiness level",
    salary = "Monthly salary",
    name = "Staff name",
    tiredness = "Tiredness level",
    center_view = "Left click to zoom to staff, right click to cycle through staff members",
    skills = "Special Skills",
    researcher = "Researcher",
    face = "This person's face - click to open management screen",
  },
  rooms = {
    ultrascan = "A Doctor uses the Ultrascan Room to diagnose Patients",
    research_room = "Doctors with Research skills can discover new drugs and machines in the Research Room",
    fracture_clinic = "A Nurse uses the Fracture Clinic to repair Broken Bones",
    gps_office = "Patients receive their initial consultation and results in the GP's Office",
    inflation = "A Doctor uses the Inflator Room to cure Patients with Bloaty Heads",
    staffroom = "Doctors and Nurses relax in the staff room and become less tired",
    jelly_vat = "A Doctor uses the Jelly-vat to cure Jellyitis",
    scanner = "A Doctor uses the Scanner Room to diagnose Patients",
    decontamination = "A Doctor uses the Decontamination Shower to cure Radioactivity",
    pharmacy = "The Nurse dispenses drugs to cure patients in a Pharmacy",
    cardiogram = "A Doctor uses the Cardio Room to diagnose Patients",
    ward = "Wards are useful for both diagnosis and treatment. Patients are sent here for observation and also recover from operations in a Ward with a Nurse",
    training_room = "A Training room with a Consultant can be used to train other Doctors",
    operating_theatre = "The Operating Theatre needs two Doctors with surgery skills",
    psychiatry = "The Psychiatry Room cures mad patients and helps in the diagnosis of other patients, but needs a Doctor with Psychiatry skills",
    hair_restoration = "A Doctor uses the Hair-Restorer Room to cure Baldness",
    tongue_clinic = "A Doctor uses the Tongue-Slicing Room to cure Slack Tongues",
    dna_fixer = "A Doctor uses the DNA-Fixer Room to cure patients with Alien DNA",
    general_diag = "A Doctor uses the General Diagnosis Room for basic diagnosis of patients. Cheap and often very effective",
    toilets = "Build Toilets to stop Patients making a mess in your hospital!",
    electrolysis = "A Doctor uses the Electrolysis room to cure Hairyitis",
    x_ray = "A Doctor uses the X-ray Room to diagnose Patients",
    blood_machine = "A Doctor uses the Blood Machine Room to diagnose Patients",
  },
  statement = {
    close = "Close Statement screen",
  },
  buy_objects_window = {
    confirm = "Purchase item(s)",
    cancel = "Cancel",
    increase = "Buy one more of this item",
    total_value = "Total value of items ordered",
    price = "Price of item",
    decrease = "Buy one less of this item",
  },
  load_game_window = {
    load_game = "Load game %s",
    load_autosave = "Load autosave",
    load_game_number = "Load game %d",
  },
  window_general = {
    confirm = "Confirm",
    cancel = "Cancel",
  },
  fax = {
    close = "Close this window without deleting the message",
  },
  objects = {
    chair = "Chair: patients sit here and discuss their illnesses.",
    litter = "Litter: Left on the floor by a patient because he did not find a bin to throw it in.",
    sofa = "Sofa: Employees resting in the Staff Room will sit quietly on a sofa unless there's a better way of relaxing.",
    operating_table = "30 OB_OP_TABLE",
    bed2 = "unused",
    bench = "Bench: provides seating for one patient, making waiting more comfortable.",
    scanner = "14 OB_SCANNER",
    couch = "18 OB_COUCH",
    blood_machine = "42 OB_BLOOD_MC",
    table1 = "Table (REMOVED): holds collection of magazines to keep waiting patients happy.",
    video_game = "Video game: Let your staff relax with Hi-Octane.",
    lamp = "Lamp: shines light and enables staff member to see.",
    op_sink2 = "34 OB_OP_SINK_2",
    door = "Door: people open and close these a lot.",
    auto_autopsy = "Autopsy: greatly assists in the discovery of new cures",
    reception_desk = "Reception Desk: requires a Receptionist who directs patients to Doctors.",
    hair_restorer = "25 OB_HAIR_RESTORER",
    projector = "37 OB_PROJECTOR",
    crash_trolley = "20 OB_CRASH",
    tv = "TV: make sure your staff don't miss their favourite programmes.",
    ultrascanner = "22 OB_ULTRASCAN",
    surgeon_screen = "35 OB_SURGEON_SCREEN",
    litter_bomb = "Litter Bomb: sabotage opponents' hospitals",
    inflator = "Inflator: cures people with Bloaty Head.",
    table2 = "12 OB_BTABLE",
    desk = "Desk: essential for Doctor to put to PC on.",
    pool_table = "Pool table: helps your staff relax.",
    x_ray_viewer = "29 OB_XRAY_VIEWER",
    radiation_shield = "28 OB_RAD_SHIELD",
    bed = "Bed: really sick people lie around on these.",
    swing_door2 = "53 OB_DOUBLE_DOOR2",
    console = "15 OB_SCANNER_CONSOLE",
    op_sink1 = "33 OB_OP_SINK_1",
    bookcase = "Bookcase: reference material for Doctors.",
    drinks_machine = "Drinks machine: stops patients from getting thirsty and provides revenue.",
    comfortable_chair = "61 OB_COMFY_CHAIR",
    skeleton = "Skeleton: used for training purposes and Halloween.",
    computer = "Computer: key research component",
    bin = "Bin: patients put their rubbish here.",
    pharmacy_cabinet = "Pharmacy: where the medicine is kept",
    radiator = "Radiator: keeps your hospital from getting cold.",
    cast_remover = "24 OB_CAST_REMOVE",
    atom_analyser = "Chemical mixer: placed in the Research Department, this machine speeds up the whole research process.",
    plant = "Plant: keeps patients happy and purifies the air.",
    jelly_moulder = "47 OB_JELLY_VAT",
    cardio = "13 OB_CARDIO",
    toilet = "Loo: patients, er, use this.",
    electrolyser = "46 OB_ELECTRO",
    fire_extinguisher = "Extinguisher: minimises danger from malfunctioning machinery.",
    bed3 = "unused",
    swing_door1 = "52 OB_DOUBLE_DOOR1",
    lecture_chair = "Lecture chair: your learning Doctors sit here to take notes, get bored and doodle idly. The more chairs you place, the larger your class sizes can be.",
    screen = "16 OB_SCREEN",
    toilet_sink = "Sink: your more hygiene-conscious patients may wash their soiled hands in this. If there aren't enough sinks, patients become unhappy.",
    shower = "54 OB_DECON_SHOWER",
    gates_of_hell = "48 OB_HELL",
    entrance_right = "59 OB_ENT_RDOOR",
    entrance_left = "58 OB_ENT_LDOOR",
    slicer = "26 OB_SLICER",
    dna_fixer = "23 OB_DNA_FIXER",
    x_ray = "27 OB_XRAY",
    cabinet = "Cabinet: contains patient files, notes and research documents.",
  },
  build_room_window = {
    cost = "Cost of your currently selected room",
    room_classes = {
      treatment = "Select General Treatment rooms",
      diagnosis = "Select Diagnosis rooms",
      facilities = "Select Special Facility rooms",
      clinic = "Select Specialist Clinic rooms",
    },
    close = "Abort this requester and return to game",
  },
  options_window = {
    fullscreen_button = "Click to toggle fullscreen mode",
    original_path = "The currently chosen directory of the original Theme Hospital installation",
    browse = "Browse for another location of a Theme Hospital installation",
    change_resolution = "Change the window resolution to the dimensions entered on the left",
    height = "Enter desired screen height",
    width = "Enter desired screen width",
    language = "Select %s as language",
    back = "Close the options window",
  },
}
menu_charts = {
  briefing = "  BRIEFING  ",
  casebook = "  CASEBOOK  ",
  graphs = "  GRAPHS  ",
  policy = "  POLICY  ",
  bank_manager = "  BANK MANAGER  ",
  statement = "  STATEMENT  ",
  staff_listing = "  STAFF LISTING  ",
  research = "  RESEARCH  ",
  status = "  STATUS  ",
}
town_map = {
  number = "Plot Number",
  not_for_sale = "Not Ownable",
  chat = "Town Detail Chat",
  price = "Plot Price",
  for_sale = "For Sale",
  owner = "Plot Owner",
  area = "Plot Area",
}
vip_names = {
  [1] = "The Mayor of Greater Trumpton",
  [2] = "Lawrence Nightingale",
  [3] = "King Bernard of The Netherlands",
  [4] = "Aung Sang Su Kyi, the Burmese Democratic Opposition Leader",
  [5] = "Sir Reginald Crumbly",
  [6] = "Billy Savile OBE",
  [7] = "Councillor Crawford Purves",
  [8] = "Rocket Ronnie Jepson",
  [9] = "A Premiership footballer",
  [10] = "L. F. Probst, III",
  health_minister = "The Minister for Health",
}
custom_game_window = {
  caption = "Custom Game",
  free_build = "Free Build",
}
cheats_window = {
  cheats = {
    end_month = "End of Month",
    create_patient = "Create Patient",
    money = "Money Cheat",
    emergency = "Create Emergency",
    win_level = "Win Level",
    vip = "Create VIP",
    lose_level = "Lose Level",
    earthquake = "Create Earthquake",
    all_research = "All Research Cheat",
    end_year = "End of Year",
  },
  close = "Close",
  caption = "Cheats",
  cheated = {
    no = "Cheats used: No",
    yes = "Cheats used: Yes",
  },
  warning = "Warning: You will not get any bonus points at the end of the level if you cheat!",
}
room_descriptions = {
  ultrascan = {
    [1] = "Ultrascan//",
    [2] = "The Ultrascan is virtually the ultimate in diagnostic equipment. It costs a lot but is worth it if you want superb diagnosing in your hospital.//",
    [3] = "The Ultrascanner requires any Doctor. It also requires maintenance. ",
  },
  gp = {
    [1] = "GP's Office//",
    [2] = "This is the fundamental diagnosis room in your hospital. New patients are sent here to find out what is wrong with them. They are then sent either to further diagnosis or to a room where they can be cured. You might want to build another GP's Office if this one gets too busy. The bigger the room, and the more extra objects you place in it, the higher the prestige for the Doctor. This is also true of all the occupied rooms.//",
    [3] = "The GP's Office requires any Doctor. ",
  },
  fracture_clinic = {
    [1] = "Fracture Clinic//",
    [2] = "Those patients unlucky enough to have Broken Bones will go here. The Cast Removal Machine will use powerful industrial lasers to slice off any hardened cast, causing only a little agony to the patient.//",
    [3] = "The Fracture Clinic requires a Nurse. It also needs maintenance every so often. ",
  },
  tv_room = {
    [1] = "TV ROOM NOT USED",
  },
  inflation = {
    [1] = "Inflation Clinic//",
    [2] = "Patients with the painful-yet-humorous condition of Bloaty Head must come to the Inflation Clinic, where the overlarge cranium will be popped and instantly reinflated to the correct pressure.//",
    [3] = "The Inflation Clinic requires any Doctor. It also requires on-going maintenance by a Handyman. ",
  },
  jelly_vat = {
    [1] = "Jelly Clinic//",
    [2] = "Patients cursed with the risible illness Jellyitis must wobble their way to the Jelly Clinic, and be placed in the Jelly Vat. This cures them in a way still not fully understood by the medical profession.//",
    [3] = "The Jelly Clinic requires any Doctor. It also needs a Handyman for maintenance. ",
  },
  scanner = {
    [1] = "Scanner//",
    [2] = "Patients are accurately diagnosed using the sophisticated Scanner. They then go and see a Doctor in the GP's Office for further treatment.//",
    [3] = "The Scanner requires any Doctor. It also requires maintenance. ",
  },
  blood_machine = {
    [1] = "Blood Machine//",
    [2] = "The Blood Machine is a piece of diagnosis equipment which checks the cells in a patient's blood to find out what is wrong with them.//",
    [3] = "The Blood Machine requires any Doctor. It also requires maintenance. ",
  },
  pharmacy = {
    [1] = "Pharmacy//",
    [2] = "Patients who have been diagnosed and whose treatment is a drug must visit the Pharmacy to take their medicine. As more and more drug cures are researched and become available, this room gets busier. You might want to build another Pharmacy later.//",
    [3] = "The Pharmacy requires a Nurse. ",
  },
  cardiogram = {
    [1] = "Cardio//",
    [2] = "Patients are diagnosed and checked in here, before going back to a GP's Office to be assigned to a cure.//",
    [3] = "The Cardio requires any Doctor. It also requires maintenance. ",
  },
  ward = {
    [1] = "Ward//",
    [2] = "Patients are kept here for observation by a Nurse during diagnosis. They remain here prior to having a operation.//",
    [3] = "The Ward requires one Nurse. ",
  },
  psych = {
    [1] = "Psychiatry//",
    [2] = "Patients diagnosed with psychiatric illnesses must visit the Psychiatry Dept to receive counselling. Psychiatrists can also make diagnoses, finding out what type of illnesses the patients have and, if mental in origin, treating them using the trusty couch.//",
    [3] = "The Psychiatry Dept. requires a Psychiatrically-trained Doctor. ",
  },
  staff_room = {
    [1] = "Staff Room//",
    [2] = "Your staff get tired as they carry out their jobs. They require this room to relax and refresh themselves. Tired staff slow down, demand more money and will eventually quit. They also make more mistakes. Building a staff room with plenty for them to do is very worthwhile. Make sure there is room for several staff members at one time. ",
  },
  operating_theatre = {
    [1] = "Operating Theatre//",
    [2] = "This important installation is where a variety of conditions are treated. The Theatre has to be a good size, and must be filled with the correct equipment. It is a vital part of your hospital.//",
    [3] = "The Operating Theatre requires two Doctors with Surgeon qualifications. ",
  },
  training = {
    [1] = "Training Room//",
    [2] = "Your Juniors and Doctors can gain valuable extra qualifications by studying in this room. A Consultant with Surgery, Research or Psychiatric skills will pass these on to any Doctors being trained. Doctors who already have these skills will find their ability to use them increases whilst here.//",
    [3] = "The Training Room requires a Consultant. ",
  },
  dna_fixer = {
    [1] = "DNA Clinic//",
    [2] = "Patients who have been meddled with by aliens from another world must have their DNA replaced in this room. The DNA Fixer Machine is a very complex piece of equipment and it would be sensible to keep a fire extinguisher in the room with it, just in case.//",
    [3] = "The DNA Fixer Machine will require periodic maintenance by a Handyman. It also requires a Doctor with Research qualifications to work it. ",
  },
  research = {
    [1] = "Research Room//",
    [2] = "New drugs and cures are invented or improved in the Research Room. It's a vital part of your hospital, and will do wonders for your cure percentages.//",
    [3] = "The Research Room requires a Doctor with Research qualifications. ",
  },
  hair_restoration = {
    [1] = "Hair Restoration Clinic//",
    [2] = "Patients suffering from the extreme condition of Baldness will be directed towards the Hair Restorer Machine in this Clinic. A Doctor will operate the machine, and it will rapidly seed the patient's head with fresh hair.//",
    [3] = "The Hair Restoration Clinic requires any Doctor. It also requires periodic maintenance. ",
  },
  general_diag = {
    [1] = "General Diagnosis//",
    [2] = "Patients who require further diagnosis are sent to be checked here. If a GP's Office doesn't find out what is wrong with them, General Diagnosis often will. From here they will be sent back to the GP's office for analysis of the results produced here.//",
    [3] = "The General Diagnosis Room requires any Doctor. ",
  },
  electrolysis = {
    [1] = "Electrolysis Room//",
    [2] = "Patients with Hairyitis are directed to this room, where a special machine called the Electrolyser yanks out the hairs and seals the pores electrically using a compound not unlike grout.//",
    [3] = "The Electrolysis Room requires any Doctor. It also needs maintenance by a Handyman. ",
  },
  slack_tongue = {
    [1] = "Slack Tongue Clinic//",
    [2] = "Patients diagnosed in the GP's Office with Slack Tongue will be sent to this clinic for treatment. The Doctor will use a piece of high-tech machinery to extend the tongue and snip it off, thus returning the patient to normal good health.//",
    [3] = "The Slack Tongue Clinic requires any Doctor. It also needs maintenance every so often. ",
  },
  toilets = {
    [1] = "Toilet//",
    [2] = "Patients feeling a call of nature will need to unburden themselves in the comfort of your toilet facilities. You can build extra stalls and wash-basins if you expect a lot of visitors. In some cases, you might consider building further facilities elsewhere in the hospital. ",
  },
  no_room = {
    [1] = "",
  },
  x_ray = {
    [1] = "X-Ray//",
    [2] = "The X-Ray machine photographs people's insides using special radiation to provide staff with a good idea of what is wrong with them.//",
    [3] = "The X-Ray requires any Doctor. It also requires maintenance. ",
  },
  decontamination = {
    [1] = "Decontamination Clinic//",
    [2] = "Patients who have been exposed to Radiation are quickly shown to the Decontamination Clinic. This room contains a shower which cleanses them off all the horrid radioactivity and muck.//",
    [3] = "The Decontamination Shower requires any Doctor. It also needs maintaining by a Handyman. ",
  },
}
errors = {
  unavailable_screen_size = "The screen size you requested is not available in fullscreen mode.",
  dialog_missing_graphics = "Sorry, the demo data files don't contain this dialog.",
  maximum_screen_size = "Please enter a screen size of at most 3000x2000.",
  load_prefix = "Error while loading game: ",
  save_prefix = "Error while saving game: ",
  map_file_missing = "Could not find the map file %s for this level!",
  minimum_screen_size = "Please enter a screen size of at least 640x480.",
}
bank_manager = {
  current_loan = "Current Loan",
  balance = "Balance",
  interest_payment = "Interest Payment",
  hospital_value = "Hospital Value",
  interest_rate = "Interest Rate",
  insurance_owed = "Insurance Owed",
  statistics_page = {
    balance = "Balance",
    details = "Details",
    date = "Date",
    current_balance = "Current Balance",
    money_in = "In",
    money_out = "Out",
  },
  inflation_rate = "Inflation Rate",
}
main_menu = {
  exit = "Exit",
  custom_level = "Single Scenario",
  version = "Version: ",
  new_game = "Campaign",
  load_game = "Load Game",
  options = "Options",
  savegame_version = "Savegame version: ",
}
date_format = {
  daymonth = "%1% %2:months%",
}
menu_display = {
  mcga_lo_res = "  MCGA LO-RES  ",
  shadows = "  SHADOWS  ",
  high_res = "  HIGH RES  ",
}
original_credits = {
  [1] = " ",
  [2] = " ",
  [3] = " ",
  [4] = " ",
  [5] = " ",
  [6] = " ",
  [7] = " ",
  [8] = " ",
  [9] = " ",
  [10] = " ",
  [11] = " ",
  [12] = ":Designed and Created by",
  [13] = ":Bullfrog Productions",
  [14] = " ",
  [15] = ":Pluto Development Team",
  [16] = ",",
  [17] = "Mark Webley",
  [18] = "Gary Carr",
  [19] = "Matt Chilton",
  [20] = "Matt Sullivan",
  [21] = "Jo Rider",
  [22] = "Rajan Tande",
  [23] = "Wayne Imlach",
  [24] = "Andy Bass",
  [25] = "Jon Rennie",
  [26] = "Adam Coglan",
  [27] = "Natalie White",
  [28] = " ",
  [29] = " ",
  [30] = " ",
  [31] = ":Programming",
  [32] = ",",
  [33] = "Mark Webley",
  [34] = "Matt Chilton",
  [35] = "Matt Sullivan",
  [36] = "Rajan Tande",
  [37] = " ",
  [38] = " ",
  [39] = " ",
  [40] = ":Art",
  [41] = ",",
  [42] = "Gary Carr",
  [43] = "Jo Rider",
  [44] = "Andy Bass",
  [45] = "Adam Coglan",
  [46] = " ",
  [47] = " ",
  [48] = " ",
  [49] = ":Additional Programming",
  [50] = ",",
  [51] = "Ben Deane",
  [52] = "Gary Morgan",
  [53] = "Jonty Barnes",
  [54] = " ",
  [55] = " ",
  [56] = " ",
  [57] = ":Additional Art",
  [58] = ",",
  [59] = "Eoin Rogan",
  [60] = "George Svarovsky",
  [61] = "Saurev Sarkar",
  [62] = "Jason Brown",
  [63] = "John Kershaw",
  [64] = "Dee Lee",
  [65] = " ",
  [66] = " ",
  [67] = " ",
  [68] = ":Intro Sequence",
  [69] = ",",
  [70] = "Stuart Black",
  [71] = " ",
  [72] = " ",
  [73] = " ",
  [74] = ":Music and Sound Effects",
  [75] = ",",
  [76] = "Russell Shaw",
  [77] = "Adrian Moore",
  [78] = " ",
  [79] = " ",
  [80] = " ",
  [81] = ":Additional Music",
  [82] = ",",
  [83] = "Jeremy Longley",
  [84] = "Andy Wood",
  [85] = " ",
  [86] = " ",
  [87] = " ",
  [88] = ":Announcer Voiceover",
  [89] = ",",
  [90] = "Rebecca Green",
  [91] = " ",
  [92] = " ",
  [93] = " ",
  [94] = ":Level Design",
  [95] = ",",
  [96] = "Wayne Imlach",
  [97] = "Natalie White",
  [98] = "Steven Jarrett",
  [99] = "Shin Kanaoya",
  [100] = " ",
  [101] = " ",
  [102] = " ",
  [103] = ":Scripting",
  [104] = ",",
  [105] = "James Leach",
  [106] = "Sean Masterson",
  [107] = "Neil Cook",
  [108] = " ",
  [109] = " ",
  [110] = " ",
  [111] = ":R&D",
  [112] = " ",
  [113] = ":Graphics Engine",
  [114] = ",",
  [115] = "Andy Cakebread",
  [116] = "Richard Reed",
  [117] = " ",
  [118] = " ",
  [119] = " ",
  [120] = ":R&D Support",
  [121] = ",",
  [122] = "Glenn Corpes",
  [123] = "Martin Bell",
  [124] = "Ian Shaw",
  [125] = "Jan Svarovsky",
  [126] = " ",
  [127] = " ",
  [128] = " ",
  [129] = ":Library and Tools",
  [130] = " ",
  [131] = "Dos and Win 95 Library",
  [132] = ",",
  [133] = "Mark Huntley",
  [134] = "Alex Peters",
  [135] = "Rik Heywood",
  [136] = " ",
  [137] = " ",
  [138] = " ",
  [139] = ":Network Library",
  [140] = ",",
  [141] = "Ian Shippen",
  [142] = "Mark Lamport",
  [143] = " ",
  [144] = " ",
  [145] = " ",
  [146] = ":Sound Library",
  [147] = ",",
  [148] = "Russell Shaw",
  [149] = "Tony Cox",
  [150] = " ",
  [151] = " ",
  [152] = " ",
  [153] = ":Installer Programming",
  [154] = ",",
  [155] = "Andy Nuttall",
  [156] = "Tony Cox",
  [157] = "Andy Cakebread",
  [158] = " ",
  [159] = " ",
  [160] = " ",
  [161] = ":Moral Support",
  [162] = ",",
  [163] = "Peter Molyneux",
  [164] = " ",
  [165] = " ",
  [166] = " ",
  [167] = ":Testing Manager",
  [168] = ",",
  [169] = "Andy Robson",
  [170] = " ",
  [171] = " ",
  [172] = " ",
  [173] = ":Lead Testers",
  [174] = ",",
  [175] = "Wayne Imlach",
  [176] = "Jon Rennie",
  [177] = " ",
  [178] = " ",
  [179] = " ",
  [180] = ":Play Testers",
  [181] = ",",
  [182] = "Jeff Brutus",
  [183] = "Wayne Frost",
  [184] = "Steven Lawrie",
  [185] = "Tristan Paramor",
  [186] = "Nathan Smethurst",
  [187] = " ",
  [188] = "Ryan Corkery",
  [189] = "Simon Doherty",
  [190] = "James Dormer",
  [191] = "Martin Gregory",
  [192] = "Ben Lawley",
  [193] = "Joel Lewis",
  [194] = "David Lowe",
  [195] = "Robert Monczak",
  [196] = "Dominic Mortoza",
  [197] = "Karl O'Keeffe",
  [198] = "Michael Singletary",
  [199] = "Andrew Skipper",
  [200] = "Stuart Stephen",
  [201] = "David Wallington",
  [202] = " ",
  [203] = "And all our other Work Experience Play Testers",
  [204] = " ",
  [205] = " ",
  [206] = " ",
  [207] = ":Technical Support",
  [208] = ",",
  [209] = "Kevin Donkin",
  [210] = "Mike Burnham",
  [211] = "Simon Handby",
  [212] = " ",
  [213] = " ",
  [214] = " ",
  [215] = ":Marketing",
  [216] = ",",
  [217] = "Pete Murphy",
  [218] = "Sean Ratcliffe",
  [219] = " ",
  [220] = " ",
  [221] = " ",
  [222] = ":With thanks to:",
  [223] = ",",
  [224] = "Tamara Burke",
  [225] = "Annabel Roose",
  [226] = "Chris Morgan",
  [227] = "Pete Larsen",
  [228] = " ",
  [229] = " ",
  [230] = " ",
  [231] = ":PR",
  [232] = ",",
  [233] = "Cathy Campos",
  [234] = " ",
  [235] = " ",
  [236] = " ",
  [237] = ":Documentation",
  [238] = ",",
  [239] = "Mark Casey",
  [240] = "Richard Johnston",
  [241] = "James Lenoel",
  [242] = "Jon Rennie",
  [243] = " ",
  [244] = " ",
  [245] = " ",
  [246] = ":Documentation & Packaging Design",
  [247] = ",",
  [248] = "Caroline Arthur",
  [249] = "James Nolan",
  [250] = " ",
  [251] = " ",
  [252] = " ",
  [253] = ":Localisation Project Manager",
  [254] = ",",
  [255] = "Carol Aggett",
  [256] = " ",
  [257] = " ",
  [258] = " ",
  [259] = ":Localisation",
  [260] = ",",
  [261] = "Sandra Picaper",
  [262] = "Sonia 'Sam' Yazmadjian",
  [263] = " ",
  [264] = "Bettina Klos",
  [265] = "Alexa Kortsch",
  [266] = "Bianca Normann",
  [267] = " ",
  [268] = "C.T.O. S.p.A. Zola Predosa (BO)",
  [269] = "Gian Maria Battistini",
  [270] = "Maria Ziino",
  [271] = "Gabriele Vegetti",
  [272] = " ",
  [273] = "Elena Ruiz de Velasco",
  [274] = "Julio Valladares",
  [275] = "Ricardo Mart鱈nez",
  [276] = " ",
  [277] = "Kia Collin",
  [278] = "CBG Consult",
  [279] = "Ulf Thor",
  [280] = " ",
  [281] = " ",
  [282] = " ",
  [283] = ":Production",
  [284] = ",",
  [285] = "Rachel Holman",
  [286] = " ",
  [287] = " ",
  [288] = " ",
  [289] = ":Producer",
  [290] = ",",
  [291] = "Mark Webley",
  [292] = " ",
  [293] = " ",
  [294] = " ",
  [295] = ":Associate Producer",
  [296] = ",",
  [297] = "Andy Nuttall",
  [298] = " ",
  [299] = " ",
  [300] = " ",
  [301] = ":Operations",
  [302] = ",",
  [303] = "Steve Fitton",
  [304] = " ",
  [305] = " ",
  [306] = " ",
  [307] = ":Company Administration",
  [308] = ",",
  [309] = "Audrey Adams",
  [310] = "Annette Dabb",
  [311] = "Emma Gibbs",
  [312] = "Lucia Gobbo",
  [313] = "Jo Goodwin",
  [314] = "Sian Jones",
  [315] = "Kathy McEntee",
  [316] = "Louise Ratcliffe",
  [317] = " ",
  [318] = " ",
  [319] = " ",
  [320] = ":Company Management",
  [321] = ",",
  [322] = "Les Edgar",
  [323] = "Peter Molyneux",
  [324] = "David Byrne",
  [325] = " ",
  [326] = " ",
  [327] = ":All at Bullfrog Productions",
  [328] = " ",
  [329] = " ",
  [330] = " ",
  [331] = ":Special Thanks to",
  [332] = ",",
  [333] = "Everyone at Frimley Park Hospital",
  [334] = " ",
  [335] = ":Especially",
  [336] = ",",
  [337] = "Beverley Cannell",
  [338] = "Doug Carlisle",
  [339] = " ",
  [340] = " ",
  [341] = " ",
  [342] = ":Keep On Thinking",
  [343] = " ",
  [344] = " ",
  [345] = " ",
  [346] = " ",
  [347] = " ",
  [348] = " ",
  [349] = " ",
  [350] = " ",
  [351] = " ",
  [352] = " ",
  [353] = " ",
  [354] = " ",
  [355] = " ",
  [356] = " ",
  [357] = " ",
  [358] = " ",
  [359] = " ",
  [360] = " ",
  [361] = ".",
}
pay_rise = {
  definite_quit = "Nothing you can do will keep me here. I've had it with this place.",
  regular = {
    [1] = "I'm totally frazzled. I need a good rest, plus a rise of  %d  if you don't want to see me jack in this poxy job.",
    [2] = "I'm very tired. I need a rest and a salary boost of %d, putting me on %d. Do it now, you tyrant.",
    [3] = "Come on. I'm working like a dog here. Give me a bonus of %d and I'll stay in your hospital.",
    [4] = "I'm very unhappy. I demand a raise of %d, making my wages %d, otherwise I'm out of here.",
    [5] = "My parents told me that the medical profession paid well. So give me a raise of %d or I'll become a computer games producer.",
    [6] = "I'm fed up. Pay me a decent wage. I reckon a raise of %d should do the trick.",
  },
  poached = "I have been offered %d by %s. Unless you pay me the same I'm off.",
}
menu_debug = {
  lua_console = "  (F12) LUA CONSOLE  ",
  porter_pagers = "  PORTER PAGERS        ",
  object_cells = "  OBJECT CELLS         ",
  display_pager = "  DISPLAY PAGER        ",
  disable_salary_raise = "  DISABLE SALARY RAISE  ",
  make_debug_fax = "  (F8) MAKE DEBUG FAX  ",
  display_big_cells = "  DISPLAY BIG CELLS    ",
  make_debug_patient = "  (F9) MAKE DEBUG PATIENT  ",
  mapwho_checking = "  MAPWHO CHECKING      ",
  sprite_viewer = "  SPRITE VIEWER  ",
  keep_clear_cells = "  KEEP CLEAR CELLS     ",
  dump_strings = "  DUMP STRINGS  ",
  machine_pagers = "  MACHINE PAGERS       ",
  remove_walls = "  REMOVE WALLS         ",
  enter_nav_debug = "  ENTER NAV DEBUG      ",
  lose_game_anim = {
    [1] = "  LOSE GAME 1 ANIM     ",
    [2] = "  LOSE GAME 2 ANIM     ",
    [3] = "  LOSE GAME 3 ANIM     ",
    [4] = "  LOSE GAME 4 ANIM     ",
    [5] = "  LOSE GAME 5 ANIM     ",
    [6] = "  LOSE GAME 6 ANIM     ",
    [7] = "  LOSE GAME 7 ANIM     ",
  },
  map_overlay = "  MAP OVERLAY  ",
  calls_dispatcher = "  CALLS DISPATCHER  ",
  show_nav_cells = "  SHOW NAV CELLS       ",
  win_game_anim = "  WIN GAME ANIM        ",
  display_room_status = "  DISPLAY ROOM STATUS  ",
  cheats = "  (F11) CHEATS  ",
  remove_objects = "  REMOVE OBJECTS       ",
  nav_bits = "  NAV BITS             ",
  win_level_anim = "  WIN LEVEL ANIM       ",
  dump_gamelog = "  (CTRL+D) DUMP GAME LOG  ",
  limit_camera = "  LIMIT CAMERA  ",
  pixbuf_cells = "  PIXBUF CELLS         ",
  transparent_walls = "  (X) TRANSPARENT WALLS  ",
  show_help_hotspot = "  SHOW HELP HOTSPOTS   ",
  jump_to_level = "  JUMP TO LEVEL  ",
  entry_cells = "  ENTRY CELLS          ",
  plant_pagers = "  PLANT PAGERS         ",
}
progress_report = {
  free_build = "FREE BUILD",
  too_hot = "Sort out your heating system. It's far too hot. ",
  percentage_pop = "% population",
  win_criteria = "WIN CRITERIA",
  very_unhappy = "Your people are very unhappy. ",
  quite_unhappy = "Your people are quite unhappy. ",
  header = "Progress Report",
  too_cold = "It's far too cold. Place radiators. ",
  more_drinks_machines = "Build more drinks machines. ",
}
menu_options = {
  game_speed = "  GAME SPEED  ",
  music_vol = "  MUSIC VOLUME  ",
  sound_vol = "  SOUND VOLUME  ",
  adviser_disabled = "  ADVISER  ",
  edge_scrolling = "  EDGE SCROLLING  ",
  announcements = "  ANNOUNCEMENTS   ",
  lock_windows = "  LOCK WINDOWS  ",
  settings = "  SETTINGS  ",
  sound = "  SOUND   ",
  announcements_vol = "  ANNOUNCEMENTS VOLUME  ",
  music = "  MUSIC   ",
  autosave = "  AUTOSAVE  ",
  jukebox = "  JUKEBOX  ",
}
menu_options_game_speed = {
  normal = "  (3) NORMAL  ",
  slower = "  (2) SLOWER  ",
  pause = "  (P) PAUSE  ",
  max_speed = "  (4) MAX SPEED  ",
  slowest = "  (1) SLOWEST  ",
  and_then_some_more = "  (5) AND THEN SOME MORE  ",
}
rooms_short = {
  ultrascan = "Ultrascan",
  research_room = "Research Dept",
  fracture_clinic = "Fracture Clinic",
  gps_office = "GP's Office",
  destroyed = "Destroyed",
  staffroom = "Staff Room",
  jelly_vat = "Jelly Vat",
  scanner = "Scanner",
  decontamination = "Decontamination",
  pharmacy = "Pharmacy",
  cardiogram = "Cardiogram",
  reception = "Reception",
  training_room = "Training",
  corridor_objects = "Corridor Objects",
  operating_theatre = "Operating Theatre",
  dna_fixer = "DNA Fixer",
  ward = "Ward",
  psychiatric = "Psychiatric",
  hair_restoration = "Hair Restoration",
  general_diag = "General Diagnosis",
  inflation = "Inflation",
  tongue_clinic = "Slack Tongue Clinic",
  toilets = "Toilets",
  electrolysis = "Electrolysis Clinic",
  x_ray = "X-ray",
  blood_machine = "Blood Machine",
}
level_names = {
  [1] = "ToxiCity",
  [2] = "Sleepy Hollow",
  [3] = "Largechester",
  [4] = "Frimpton-on-Sea",
  [5] = "Simpleton",
  [6] = "Festering-on-the-Wold",
  [7] = "Greenpool",
  [8] = "Manquay",
  [9] = "Eastville",
  [10] = "Eggsenham",
  [11] = "Croaking",
  [12] = "Battenburg",
  [13] = "Chumleigh",
  [14] = "Little Drubbing",
  [15] = "Bury Bury",
}
insurance_companies = {
  [1] = "SwanLeaf Ltd.",
  [2] = "Norfolk Onion",
  [3] = "Mutual Wavekrest",
  [4] = "Beagle Scar Ltd.",
  [5] = "Swim Bladder Ltd.",
  [6] = "Terry Honest plc.",
  [7] = "Sir Chubby Holdings",
  [8] = "Leon Katz Corp.",
  [9] = "Prigg and Bong Ltd.",
  [10] = "Happy Insurance Co.",
  [11] = "Syndicate Insurance",
  out_of_business = "OUT OF BUSINESS",
}
lua_console = {
  execute_code = "Execute",
  close = "Close",
}
staff_descriptions = {
  good = {
    [1] = "Very fast and diligent worker. ",
    [2] = "Very conscientious. Cares deeply. ",
    [3] = "Has wide range of skills. ",
    [4] = "Very friendly and enjoys a laugh. ",
    [5] = "Superb stamina. Just keeps going. ",
    [6] = "Remarkably polite and genial manner. ",
    [7] = "Incredibly talented and able. ",
    [8] = "Cares a great deal about the job in hand. ",
    [9] = "Is a perfectionist who just doesn't give up. ",
    [10] = "Dedicated to helping people with a smile. ",
    [11] = "Charming, polite and helpful. ",
    [12] = "Generally well motivated and dedicated. ",
    [13] = "Good-natured and very hard-working. ",
    [14] = "Loyal and friendly. ",
    [15] = "Careful and dependable in an emergency. ",
  },
  misc = {
    [1] = "Plays golf. ",
    [2] = "Goes scuba diving. ",
    [3] = "Makes ice-sculptures. ",
    [4] = "Drinks wine. ",
    [5] = "Drives rally cars. ",
    [6] = "Does bungee jumps. ",
    [7] = "Collects beer mats. ",
    [8] = "Likes stage-diving. ",
    [9] = "Enjoys fart-surfing. ",
    [10] = "Enjoys river-widening. ",
    [11] = "Distills whisky. ",
    [12] = "An expert at DIY. ",
    [13] = "Enjoys French arthouse films. ",
    [14] = "Plays Theme Park a lot. ",
    [15] = "Has an HGV licence. ",
    [16] = "Goes motorcycle racing. ",
    [17] = "Plays classical violin and cello. ",
    [18] = "Ardent train-wrecker. ",
    [19] = "Dog-lover. ",
    [20] = "Listens to the radio. ",
    [21] = "Takes frequent baths. ",
    [22] = "Raffia-work instructor. ",
    [23] = "Hollows vegetables out to use as soap-holders. ",
    [24] = "Part-time Special Constable. ",
    [25] = "Ex-Quiz Show Host. ",
    [26] = "Collects WW2 shrapnel. ",
    [27] = "Rearranges furniture. ",
    [28] = "Listens to rave and trip-hop music. ",
    [29] = "Enrages insects with deodorant spray. ",
    [30] = "Heckles poor comedians. ",
    [31] = "Snoops for the council. ",
    [32] = "Furtive gardener. ",
    [33] = "Smuggles fake watches. ",
    [34] = "Sings in a rock and roll band. ",
    [35] = "Worships daytime television. ",
    [36] = "Tickles trout. ",
    [37] = "Baits tourists in museums. ",
  },
  bad = {
    [1] = "Slow and fussy. ",
    [2] = "Lazy and badly motivated. ",
    [3] = "Poorly trained and feckless. ",
    [4] = "Rude and abrasive. Gets people's backs up. ",
    [5] = "Dreadful stamina - has a bad attitude. ",
    [6] = "Deaf as a post. Smells faintly of cabbage. ",
    [7] = "Rubbish at the job. A possible liability. ",
    [8] = "Rash and easily distracted. ",
    [9] = "Stressed and prone to mistakes. ",
    [10] = "Twisted and resentful - burning up with hate. ",
    [11] = "Careless and accident-prone. ",
    [12] = "Not bothered about the job. Bone idle. ",
    [13] = "Foolish risk-taker who couldn't care less. ",
    [14] = "Sly, cunning and subversive. ",
    [15] = "Arrogant and cocky. ",
  },
}
room_classes = {
  diagnosis = "Diagnosis",
  clinics = "Clinics",
  facilities = "Facilities",
  treatment = "Treatment",
}
install = {
  exit = "Exit",
  th_directory = "CorsixTH needs a copy of the data files from the original Theme Hospital game (or demo) in order to run. Please use the below selector to locate the Theme Hospital install directory.",
  title = "--------------------------------- CorsixTH Setup ---------------------------------",
}
place_objects_window = {
  pick_up_object = "Click object to pick up, or select a different option from the requester",
  place_objects_in_corridor = "Place the objects down in a corridor",
  place_windows = "Place some windows if you like, then click confirm",
  confirm_or_buy_objects = "You can confirm the room, or buy or move some objects",
  drag_blueprint = "Drag out the blueprint until you're happy with its size",
  place_door = "Place the door",
  place_objects = "Place the objects and move them until you are happy, then confirm",
}
newspaper = {
  [1] = {
    [1] = "DOC SHOCK HORROR",
    [2] = "CREEPY GP PLAYS GOD",
    [3] = "PRANKENSTEIN SHOCK",
    [4] = "WHAT WAS ON LAB SLAB?",
    [5] = "RAID HALTS RISKY RESEARCH",
  },
  [2] = {
    [1] = "DR-UNK AS A SKUNK",
    [2] = "SMASHED SURGEON",
    [3] = "CAROUSING CONSULTANT",
    [4] = "SURGICAL SNIFTER",
    [5] = "SURGEON SWILLS IT",
    [6] = "SURGICAL SPIRITS",
  },
  [3] = {
    [1] = "SURGIN' SURGEON",
    [2] = "DOCTOR PANTSDOWN",
    [3] = "DOCTOR GOING DOWN",
    [4] = "INSATIABLE SURGEON",
  },
  [4] = {
    [1] = "DOCTOR-ING THE FIGURES",
    [2] = "ORGAN-ISED CRIME",
    [3] = "BANK BYPASS OPERATION",
    [4] = "FUND HOLDING GP",
  },
  [5] = {
    [1] = "MEDICAL BOFFIN RAIDS COFFIN",
    [2] = "DOC EMPTIES GRAVES",
    [3] = "CAUGHT WITH CORPSE",
    [4] = "DR DEATH'S DAY OF RECKONING",
    [5] = "TERMINAL MALPRACTICE",
    [6] = "DOCTOR'S DIG DENOUNCED",
  },
  [6] = {
    [1] = "DOC STITCHED UP!",
    [2] = "SLACK QUACK",
    [3] = "DAMNING DIAGNOSIS",
    [4] = "CLUMSY CONSULTANT",
  },
  [7] = {
    [1] = "DOC FEELS AT LOOSE END",
    [2] = "SURGEON 'OPERATES' HIMSELF",
    [3] = "BOG BISHOP-BASHING",
    [4] = "DOCTOR'S HANDLE SCANDAL",
    [5] = "MEDIC MAKES A MESS",
  },
}
load_game_window = {
  caption = "Load Game",
}
staff_title = {
  junior = "Junior",
  psychiatrist = "Psychiatrist",
  consultant = "Consultant",
  surgeon = "Surgeon",
  doctor = "Doctor",
  researcher = "Researcher",
  nurse = "Nurse",
  receptionist = "Receptionist",
  general = "General",
}
graphs = {
  deaths = "Deaths",
  money_in = "Money in",
  money_out = "Money out",
  visitors = "Visitors",
  wages = "Wages",
  balance = "Balance",
  time_spans = {
    [1] = "1 Year",
    [2] = "12 Years",
    [3] = "48 Years",
  },
  cures = "Cures",
  reputation = "Reputation",
}
adviser = {
  tutorial = {
    hire_receptionist = "You will also need a Receptionist to deal with your Patients.",
    build_pharmacy = "Congratulations! Now build a Pharmacy and employ a Nurse in order to get yourself a working hospital.",
    hire_doctor = "You need a Doctor to diagnose and treat the sickly folk.",
    place_receptionist = "Move the Receptionist and place her anywhere. Cleverly, she'll make her way to the desk.",
    place_windows = "Place windows in the same way as the door. You don't need windows, but your staff are happier when they've got something to look out of.",
    confirm_room = "Left-click on the flashing icon to open your room for business or click on the X icon to go back a step.",
    rotate_and_place_reception = "Click the right mouse-button to rotate the Desk and place it down in your hospital with the left mouse button.",
    build_reception = "Hello. First, your hospital needs a Reception Desk. Select one from the Corridor Equipment menu.",
    doctor_in_invalid_position = "Hey! You can't put the Doctor there.",
    start_tutorial = "Read the Mission Briefing then click the left mouse button to start the tutorial.",
    receptionist_invalid_position = "You can't place your Receptionist there.",
    room_too_small_and_invalid = "The Blueprint is too small and in an invalid place. Come along.",
    window_in_invalid_position = "This window is in an invalid position. Try placing it somewhere else on the walls, if you'd be so kind.",
    choose_doctor = "Have a good look at the abilities of each Doctor before choosing one.",
    information_window = "The Help box tells you all about that nice GP's Office you've just built.",
    build_gps_office = "To start diagnosing your patient's diseases you must build a GP's Office.",
    select_doctors = "Left-click on the flashing icon to have a look at the Doctors available to hire.",
    select_diagnosis_rooms = "Left-click on the flashing icon to bring up the list of diagnosis rooms.",
    select_receptionists = "Left-click on the flashing icon to see the Receptionists currently available for work. That number on the icon indicates how many you have to choose from.",
    order_one_reception = "Left-click once on the flashing line with the left mouse-button to order one Reception Desk.",
    choose_receptionist = "Decide which Receptionist has a good ability and fair wage and then left-click on the flashing icon to employ her.",
    prev_receptionist = "Left-click on the flashing icon to view the previous available Receptionist.",
    accept_purchase = "Left-click on the flashing icon to purchase it.",
    place_door = "Move the mouse around the blueprint walls to put the door where you want it.",
    click_and_drag_to_build = "To build a GP's Office you must first decide how big it is going to be. Click and hold the left mouse button while you drag out your room to size.",
    room_in_invalid_position = "Oi! This blueprint is invalid - the red areas indicate where you have overlapped another room or the hospital walls.",
    place_objects = "Right-click to rotate room items, and left-click to place them.",
    room_too_small = "This room blueprint is red because it's too small. Drag it out further to make it bigger.",
    click_gps_office = "Left-click on the flashing line to select a GP's Office.",
    reception_invalid_position = "The Reception Desk is greyed out because it's in an invalid position. Try moving or rotating it.",
    next_receptionist = "This is the first Receptionist in the list. Left-click on the flashing icon to view the next one available.",
    room_big_enough = "The blueprint is now big enough. When you release the mouse button you'll place it. You can still move it or change its size if you want.",
    object_in_invalid_position = "This item is in an invalid position. Please either place it somewhere else, or rotate it to make it fit.",
    door_in_invalid_position = "Doh! You've tried to place the door in an invalid position. Try somewhere else on the blueprint walls.",
    place_doctor = "Place the Doctor anywhere in the hospital. He'll head off to the GP's Office once there's someone to diagnose.",
  },
  epidemic = {
    hurry_up = "If that epidemic isn't dealt with right now, you'll be up to your eyes in trouble. Get moving!",
    serious_warning = "That Contagious Disease is becoming serious. You must do something soon!",
    multiple_epidemies = "It looks like you have more than one epidemic going on at the same time. This could be an enormous disaster, so move quickly.",
  },
  staff_advice = {
    need_handyman_machines = "You'll need to employ Handymen if you want to maintain the machines in your hospital.",
    need_doctors = "You need more Doctors. Try putting your best Doctors in the rooms with the longest queues.",
    need_handyman_plants = "You'll need to employ a Handyman to water the plants.",
    need_handyman_litter = "People have started littering your hospital. Employ a Handyman to clear up after them.",
    need_nurses = "You need to employ more Nurses. Wards and Pharmacies need a Nurse.",
    too_many_doctors = "You have too many Doctors. Some of them are currently unoccupied.",
    too_many_nurses = "I think you're currently employing too many Nurses.",
  },
  earthquake = {
    damage = "That earthquake damaged %d machines and %d people in the hospital.",
    alert = "Earthquake alert. During an earthquake your machines will get damaged. They could be destroyed if they're poorly maintained.",
    ended = "Phew. I thought that was The Big One - It was %d on the Richter Scale.",
  },
  multiplayer = {
    objective_completed = "You have completed the objective. Congratulations!",
    everyone_failed = "Everyone failed to satisfy that last objective. So everyone gets to play on !",
    players_failed = "The following player(s) failed to achieved the last objective : ",
    poaching = {
      in_progress = "I will let you know whether this person wants to come to work for you.",
      not_interested = "Ha! They aren't interested in working for you - they are happy where they are.",
      already_poached_by_someone = "No way! Someone is already trying to poach that person.",
    },
    objective_failed = "You have failed to complete the objective.",
  },
  surgery_requirements = {
    need_surgeons_ward_op = "You need to employ two Surgeons and build a Ward as well as the Operating Theatre to carry out Surgery.",
    need_surgeon_ward = "You still need to employ another Surgeon and build a Ward to be able to carry out Surgery.",
  },
  vomit_wave = {
    started = "Looks like you have got a vomit virus in your hospital, if you kept it cleaner this wouldn't have happened. Perhaps you should employ more Handymen.",
    ended = "Phew! Looks like the virus that caused that vomit wave has pretty much died down. Keep your hospital clean in future.",
  },
  cheats = {
    th_cheat = "Congratulations, you have unlocked cheats!",
    hairyitis_cheat = "Hairyitis cheat activated!",
    roujin_on_cheat = "Roujin's challenge activated! Good luck...",
    crazy_on_cheat = "Oh no! All doctors have gone crazy!",
    bloaty_off_cheat = "Bloaty Head cheat deactivated.",
    bloaty_cheat = "Bloaty Head cheat activated!",
    crazy_off_cheat = "Phew... the doctors regained their sanity.",
    roujin_off_cheat = "Roujin's challenge deactivated.",
    hairyitis_off_cheat = "Hairyitis cheat deactivated.",
  },
  level_progress = {
    halfway_lost = "You're about halfway to losing this level.",
    dont_kill_more_patients = "You really can't afford to let more patients die!",
    another_patient_killed = "Oh no! You've killed another patient. That makes %d deaths now.",
    halfway_won = "You're about halfway to winning this level.",
    close_to_win_increase_value = "You're getting close to winning. Increase your hospital value by %d.",
    financial_criteria_met = "You've satisfied the financial criteria for this level. Now keep your balance above %d, whilst making sure your hospital is running efficiently",
    nearly_won = "You're getting very close to winning this level.",
    hospital_value_enough = "Keep the value of your hospital above %d And attend to your other problems to win the level.",
    another_patient_cured = "Well done - another patient cured. That's %d now.",
    three_quarters_lost = "You're three quarters of the way to losing this level.",
    reputation_good_enough = "Okay, your reputation is good enough to win this level. Keep it above %d and sort out any other problems to finish it.",
    cured_enough_patients = "You've cured enough of your patients but you need to get your hospital in better order to win the level.",
    nearly_lost = "You're getting very close to losing this level.",
    improve_reputation = "You need to improve your reputation by %d to stand a chance of winning the level.",
    three_quarters_won = "You're three quarters of the way to winning this level.",
  },
  staff_place_advice = {
    receptionists_only_at_desk = "Receptionists can only work at a Reception desk.",
    only_psychiatrists = "Doctors can only work in a Psychiatry Room if they've got Psychiatric skills.",
    only_surgeons = "Doctors can only work in an Operating Theatre if they've got Surgery skills.",
    only_nurses_in_room = "Only Nurses can work in the %s",
    only_doctors_in_room = "Only Doctors can work in the %s",
    only_researchers = "Doctors can only work in a Research Department if they've got Research skills.",
    nurses_cannot_work_in_room = "Nurses can't work in the %s",
    doctors_cannot_work_in_room = "Doctors can't work in the %s",
  },
  room_forbidden_non_reachable_parts = "Placing the room in this location would result in parts of the hospital not being reachable.",
  research = {
    machine_improved = "The %s has been enhanced by the Research Department.",
    autopsy_discovered_rep_loss = "Your Auto-Autopsy Machine has been discovered. Expect a negative reaction from the general public.",
    drug_fully_researched = "You've researched %s to 100%.",
    new_machine_researched = "A new %s has just been successfully researched.",
    drug_improved = "The %s drug has been improved by your Research Department.",
    new_available = "A new %s has become available.",
    new_drug_researched = "A new drug to cure %s has been researched.",
  },
  boiler_issue = {
    minimum_heat = "Ah, there you are. The basement boiler has broken. It looks like people in your hospital are going to get rather chilly in a bit.",
    maximum_heat = "The basement boiler has gone haywire. Radiator heat is stuck at maximum. People are going to start melting! Placing more Drinks machines would help.",
    resolved = "Good news. The boiler and radiators are now working properly again. The temperature should be all right for your patients and staff.",
  },
  competitors = {
    staff_poached = "One of your staff has been poached by another Hospital.",
    hospital_opened = "A competing hospital has been opened in the area by %s.",
    land_purchased = "%s has just purchased some land.",
  },
  room_requirements = {
    research_room_need_researcher = "You need to employ a Doctor with Research skills to use the Research room.",
    op_need_another_surgeon = "You still need to employ one more Surgeon for the Operating Theatre to be usable.",
    op_need_ward = "You must build a Ward for Pre-Op on patients before they can have surgery.",
    reception_need_receptionist = "You must employ a Receptionist to see your patients.",
    psychiatry_need_psychiatrist = "You'll need to employ a Psychiatrist, now that you've built a Psychiatry Room.",
    pharmacy_need_nurse = "You'll have to employ a Nurse for that Pharmacy.",
    ward_need_nurse = "You'll need to employ a Nurse to work in this Ward.",
    op_need_two_surgeons = "Employ two Surgeons to perform operations in the Operating Theatre.",
    training_room_need_consultant = "You need to employ a Consultant to lecture in that Training room.",
    gps_office_need_doctor = "You need to employ a Doctor to work in the GP's Office.",
  },
  goals = {
    win = {
      money = "You need another %d to meet the financial criteria on this level.",
      cure = "Cure another %d patients and you'll have cured enough to win this level.",
      reputation = "Increase your reputation to %d to satisfy the level win criterion",
      value = "You need to increase your hospital value to %d",
    },
    lose = {
      kill = "Kill another %d patients to lose the level!",
    },
  },
  warnings = {
    charges_too_low = "You're charging too little. This will bring people to your hospital, but you won't make a lot of profit from each one.",
    charges_too_high = "Your charges are high. This will make big profits in the short-term, but ultimately you'll start to drive people away.",
    staff_overworked = "Your staff are massively overworked. They're becoming inefficient and will start making disastrous mistakes.",
    doctor_crazy_overwork = "Oh no! One of your Doctors has gone crazy owing to overwork. He might recover if you rest him immediately.",
    doctors_tired = "Your Doctors are very tired. Rest them at once.",
    people_did_it_on_the_floor = "Some of your patients couldn't hold on. Cleaning up will be a big job for someone.",
    queues_too_long = "Your queues are too long.",
    money_very_low_take_loan = "Your Bank Balance is dreadfully low. You could take out a loan you know.",
    falling_2 = "Stop messing about, how would you like it?",
    patients_very_thirsty = "Patients are really suffering from thirst. If you don't put Drinks machines in soon, you'll be facing a big walk out as the people all go home for some cola.",
    machinery_very_damaged = "Urgent! Get a Handyman to repair your machines immediately! They're about to blow up!",
    handymen_tired2 = "Your Handymen are absolutely shattered. Give them some rest immediately.",
    desperate_need_for_watering = "You desperately need to employ a Handyman to look after your plants.",
    nurses_tired = "Your Nurses are tired. Rest them now.",
    too_much_litter = "There's a litter problem. More Handymen could be the answer.",
    reception_bottleneck = "There's a bottleneck in Reception. Employ another Receptionist.",
    place_plants4 = "Cheer up the Patients with some more plants around the place.",
    place_plants3 = "Patients are getting unhappy. Place some more plants to cheer them up.",
    staff_too_hot = "Your staff are overheating. Turn down the temperature or remove radiators from their rooms.",
    finanical_trouble2 = "Get some money coming in or you'll be out on the scrapheap. You'll fail the level if you lose another %d.",
    plants_thirsty = "You need to look after your plants. They're getting thirsty.",
    litter_everywhere = "There's litter everywhere. Get some Handymen on the problem.",
    nurses_tired2 = "Your Nurses are very tired. Rest them right now.",
    no_desk_2 = "Well done, that must be a world record: nearly a year and no patients! If you want to continue as Manager of this hospital, you will need to hire a receptionist and build a reception desk for her to work from!",
    plants_dying = "Your plants are dying. They're desperate for water. Get more Handymen working on this. Patients don't like dead plants.",
    reduce_staff_rest_threshold = "Try reducing the Staff Rest threshold on your Policy screen so that your staff rest more often. Just an idea.",
    more_toilets = "You need more Toilets. People are getting the turtle's head.",
    hospital_is_rubbish = "People are openly saying that your hospital is rubbish. Next thing you know, they'll be taking their disorders elsewhere.",
    pay_back_loan = "You have got plenty of money. Why don't you think about paying off that loan?",
    financial_trouble3 = "Your bank balance is looking a bit worrying. Think about making more cash. You're %d away from disaster.",
    bankruptcy_imminent = "Hey! You're heading towards bankruptcy. Be careful!",
    build_toilet_now = "Build a toilet now. People can't hold on any longer. Don't smirk - this is serious.",
    patient_stuck = "Someone has got stuck. Plan your hospital better.",
    no_patients_last_month = "No new patients came to your hospital last month. Shocking!",
    falling_5 = "This is not the place for knocking people over, they're ill you know!",
    patients_too_hot = "Patients are getting too hot. Either remove some radiators, turn down the temperature or place more drinks machines for them.",
    many_epidemics = "It looks like you have more than one epidemic going on at the same time. This could be an enormous disaster, so move quickly.",
    falling_4 = "This is an Hospital, not a Theme Park!",
    place_plants_to_keep_people = "People are leaving. Placing plants might persuade them to stay.",
    patients_thirsty2 = "People are complaining about being thirsty. You should place some more Drinks machines or move existing ones nearer to them.",
    money_low = "Your money is getting low!",
    staff_unhappy = "Your staff are unhappy. Try giving them a bonus or, better still, building them a Staff Room. You could also change your staff rest policy on the Policy screen.",
    people_freezing = "Incredibly, in this age of central heating, some of your patients are freezing cold. Build radiators to warm them up and turn up the heating.",
    falling_6 = "This is not a bowling alley, sick people should not be treated like that!",
    need_toilets = "Patients need toilets. Build them in an easily accessible place.",
    falling_3 = "Ouch, that had to hurt, someone call a Doctor!",
    nobody_cured_last_month = "Absolutely nobody was cured last month.",
    financial_trouble = "You're in serious financial trouble. Sort out your finances right now! If you lose another %d, you'll have thrown away this level!",
    patients_very_cold = "Patients are very cold. Try turning up the heating or placing more radiators in your hospital.",
    no_desk_3 = "That's just brilliant, nearly a year and you don't have a staffed reception! How do you expect to get any patients, now get it sorted out and stop messing around!",
    build_toilets = "Build a Toilet right now or you'll see something very unpleasant. And imagine what your hospital will smell like.",
    cannot_afford = "You don't have enough money in the bank to hire that person!",
    no_desk = "You should build a reception desk and hire a receptionist at some point!",
    patients_annoyed = "People are incredibly annoyed at the way you run your hospital. And I can't say I blame them. Get it together or face the consequences!",
    many_killed = "You've now killed %d people. You're supposed to make them better, you know.",
    place_plants2 = "People are walking out. Some more plants might keep them here longer.",
    staff_tired = "Your staff are getting incredibly tired. If you don't let them have some time off in a Staff Room, some could crack under the strain.",
    machines_falling_apart = "Your machines are falling apart. Get Handymen to them right away!",
    patients_unhappy = "Patients dislike your hospital. You should do something to improve their environment.",
    no_desk_1 = "If you want patients to come to your hospital, you will need to hire a receptionist and build her a desk to work at!",
    staff_unhappy2 = "Your staff are generally unhappy. They'll also soon be wanting more money.",
    cash_low_consider_loan = "Your cash situation is very bad. Have you considered a loan?",
    queue_too_long_at_reception = "You have too many patients waiting for room allocations in reception. Place another Reception desk and employ another Receptionist.",
    queue_too_long_send_doctor = "Your %s queues are too long. Make sure there's a Doctor in the room.",
    falling_1 = "Hey! that is not funny, watch where you click that mouse; someone could get hurt!",
    doctors_tired2 = "Your Doctors are incredibly tired. They need immediate rest.",
    handymen_tired = "Your Handymen are very tired. Rest them now.",
    patient_leaving = "There's a Patient leaving. The reason? Your poorly run and badly staffed and equipped hospital.",
    deal_with_epidemic_now = "If that epidemic isn't dealt with right now, you'll be up to your eyes in trouble. Get moving!",
    patients_leaving = "Patients are leaving. Improve the hospital for your visitors by placing plants, benches, drinks machines and so on.",
    machinery_damaged2 = "You must employ a Handyman to repair your machines soon.",
    epidemic_getting_serious = "That Contagious Disease is becoming serious. You must do something soon!",
    people_have_to_stand = "Suffering folk are having to stand up. Get some more seating down now.",
    receptionists_tired = "Your Receptionists are hugely tired. Rest them right away.",
    build_staffroom = "Build a Staff Room immediately. Your staff are working too hard and are on the brink of collapse. Come on - see sense!",
    machinery_slightly_damaged = "Your hospital machinery is slightly damaged. Don't forget to get it all maintained at some point.",
    need_staffroom = "Build a Staff Room for your employees to rest in.",
    patients_getting_hot = "Patients are getting very hot. Try turning down the heating or even removing some of the radiators.",
    machinery_deteriorating = "Your machines have just started to deteriorate through overuse. Keep an eye on them.",
    machinery_damaged = "Repair your machines soon. It won't be too long before they'll start falling apart.",
    patients_thirsty = "People are getting thirsty. Perhaps you should provide them with drinks machines.",
    machine_severely_damaged = "%s is very close to irreparable damage.",
    litter_catastrophy = "The litter situation is abysmal. Get a team of Handymen working on it now!",
    staff_very_cold = "Staff are complaining of the cold. Turn up the heating or place more radiators.",
    more_benches = "Think about placing more benches. Sick people resent being forced to stand up.",
    too_many_plants = "You've got far too many plants. It's a jungle in there.",
    change_priorities_to_plants = "You must change the priorities of your Handymen so that they spend more time watering your plants.",
    some_litter = "Handymen can get rid of that litter before it becomes a serious problem.",
    receptionists_tired2 = "Your Receptionists are very fatigued. Let them rest right now.",
    patients_really_thirsty = "Patients are really thirsty. Place more drinks machines, or move existing ones closer to the biggest queues.",
  },
  placement_info = {
    door_can_place = "You can place this door here if you want.",
    window_can_place = "You can place this window here. It's fine.",
    door_cannot_place = "Sorry but you can't place this door here.",
    object_can_place = "You can place this object here.",
    reception_can_place = "You can place this Reception desk here.",
    staff_cannot_place = "You can't place this staff member here. Sorry.",
    staff_can_place = "You can place this staff member here. ",
    object_cannot_place = "Hey, you can't place this object here.",
    room_cannot_place = "You can't place this room here.",
    room_cannot_place_2 = "You cannot place this room here.",
    window_cannot_place = "Ah. You can't actually place this window here.",
    reception_cannot_place = "You can't place this Reception Desk here.",
  },
  praise = {
    many_benches = "Patients have enough seating now. Nice one.",
    many_plants = "Lovely. You've got plenty of plants. Your Patients will appreciate that.",
    plants_are_well = "That's nice. You're taking good care of your plants. Lovely.",
    few_have_to_stand = "Hardly anyone has to stand in your hospital. The patients will be pleased about that.",
    plenty_of_benches = "There's plenty of seating, so that's not a problem.",
    plants_thriving = "Very good. Your plants are absolutely thriving. They look marvellous. Keep it up and you might win a trophy for them.",
    patients_cured = "%d Patients cured.",
  },
  information = {
    larger_rooms = "Larger rooms make staff feel more important and improves their performance.",
    extra_items = "Extra items in rooms make staff more comfortable and improves their performance.",
    epidemic = "You've got a contagious disease in your hospital. You must deal with it immediately!",
    promotion_to_doctor = "One of your JUNIORS has become a DOCTOR.",
    emergency = "There's an emergency! Move! Move! MOVE!",
    patient_abducted = "One of your patients is being abducted by aliens.",
    first_cure = "Well done! You've just cured your first Patient.",
    promotion_to_consultant = "One of your DOCTORS has become a CONSULTANT.",
    handyman_adjust = "You can make the Handymen clear up more effectively by adjusting their priorities.",
    promotion_to_specialist = "One of your Doctors has been promoted to a %s.",
    initial_general_advice = {
      rats_have_arrived = "Rats have infested your hospital. Try blasting them with your mouse.",
      autopsy_available = "Auto-Autopsy Machine has been researched. With this, you can dispose of troublesome or unwelcome patients, and do research on their remains. Be warned - using this machine is extremely controversial.",
      first_patients_thirsty = "There are thirsty people in your hospital. Place a drinks machine for them.",
      research_now_available = "You've built your first Research Room. Now you can access the Research screen.",
      psychiatric_symbol = "Doctors skilled in Psychiatric matters bear the symbol: |",
      decrease_heating = "People in your hospital are too hot. Turn down the heating level. This is done on the Town Screen.",
      surgeon_symbol = "Doctors who can perform surgery bear the symbol: {",
      first_emergency = "Emergency patients have a flashing blue light above their heads. Cure them before they die or the time limit runs out.",
      first_epidemic = "There is an epidemic in your hospital! Decide whether you want to cover it up or come clean about it.",
      taking_your_staff = "Somebody is poaching your staff. You're going to have to fight to keep them.",
      place_radiators = "People in your hospital are cold - you can place more radiators by selecting them from the Corridor Items menu.",
      epidemic_spreading = "There is a contagion in your hospital. Try to cure the infected people before they can leave.",
      research_symbol = "Doctors able to research bear the symbol: }",
      machine_needs_repair = "You have a machine that requires repair. Locate the machine - it'll be smoking - and click on it. Then click on the Handyman button.",
      increase_heating = "People are cold. Turn up the heating by going to the Town Screen.",
      first_VIP = "You're about to host your first VIP visit. Try to make sure the VIP doesn't see anything unhygienic, or any unhappy patients.",
    },
    patient_leaving_too_expensive = "A patient is leaving without paying for %s. It's too expensive.",
    vip_arrived = "Watch out! - %s has just arrived to tour your hospital! Keep everything running smoothly to please him.",
    epidemic_health_inspector = "News of your epidemic has reached the Ministry of Health. Prepare for a visit from a Health Inspector soon.",
    first_death = "You have just killed your first patient. How does it feel?",
    pay_rise = "A member of staff is threatening to resign. Choose whether to agree to their demands or to sack them. Click on the icon in the bottom left to see which staff member is threatening to resign.",
    place_windows = "Placing windows makes the rooms brighter and improves the spirits of your staff.",
    fax_received = "The icon that has just popped up in the bottom left of the screen alerts you to an important piece of information or a decision you have to make.",
  },
  build_advice = {
    placing_object_blocks_door = "Placing that object there would prevent folks from getting to a door.",
    blueprint_would_block = "That blueprint would block off other rooms. Try resizing the room, or moving it somewhere else!",
    door_not_reachable = "People wouldn't be able to get to that door. Think about it.",
    blueprint_invalid = "That's not a valid blueprint.",
  },
}
calls_dispatcher = {
  repair = "Repair %s",
  summary = "%d calls; %d assigned",
  close = "Close",
  watering = "Watering @ %d,%d",
  staff = "%s - %s",
}
information = {
  very_old_save = "There have been a lot of updates to the game since you started this level. To be sure that all features work as intended please consider restarting it.",
  level_lost = {
    [1] = "Bummer! You failed the level. Better luck next time!",
    [2] = "The reason you lost:",
    reputation = "Your reputation fell below %d.",
    balance = "Your bank balance fell below %d.",
    percentage_killed = "You killed more than %d percent of the patients.",
  },
  cannot_restart = "Unfortunately this custom game was saved before the restart feature was implemented.",
  custom_game = "Welcome to CorsixTH. Have fun with this custom map!",
  no_custom_game_in_demo = "Sorry, but in the demo version you can't play any custom maps.",
}
casebook = {
  sent_home = "turned away",
  deaths = "fatalities",
  treatment_charge = "treatment charge",
  reputation = "reputation",
  research = "concentrate research",
  cure = "cure",
  cured = "recoveries",
  earned_money = "money earned",
  cure_desc = {
    hire_psychiatrists = "You must employ Psychiatrists.",
    improve_cure = "Improve Cure.",
    hire_nurses = "You should employ some Nurses.",
    build_ward = "You still need to build a Ward.",
    no_cure_known = "No Known Cure.",
    cure_known = "Cure.",
    build_room = "I recommend that you build %s",
    hire_doctors = "You need to employ some Doctors.",
    hire_surgeons = "You need to employ Surgeons.",
  },
}
new_game_window = {
  hard = "Consultant (Hard)",
  cancel = "Cancel",
  tutorial = "Tutorial",
  easy = "Junior (Easy)",
  medium = "Doctor (Medium)",
}
diseases = {
  diag_ward = {
    name = "Diag Ward",
  },
  diag_ultrascan = {
    name = "Diag Ultrascan",
  },
  autopsy = {
    name = "Autopsy",
  },
  third_degree_sideburns = {
    cause = "Cause - wistful longing for the 1970s",
    cure = "Cure - The Psychiatry staff must, using up-to-date techniques, convince the patient that these hairy accoutrements are rubbish.",
    name = "3rd Degree Sideburns",
    symptoms = "Symptoms - big hair, flares, platforms and glitter make-up.",
  },
  discrete_itching = {
    cause = "Cause - tiny insects with sharp teeth.",
    cure = "Cure - Patient drinks a pharmaceutical gluey syrup to prevent the skin from itching.",
    name = "Discrete Itching",
    symptoms = "Symptoms - scratching, leading to body-part inflammation.",
  },
  the_squits = {
    cause = "Cause - eating pizza found under the cooker.",
    cure = "Cure - A glutinous mix of stringy pharmaceutical chemicals solidify the patients innards.",
    name = "The Squits",
    symptoms = "Symptoms - ugh. Surely you can guess.",
  },
  spare_ribs = {
    cause = "Cause - sitting on cold stone floors.",
    cure = "Cure - These must be taken out by two Surgeons, and given to the patient in a doggy bag.",
    name = "Spare Ribs",
    symptoms = "Symptoms - unpleasant feeling of chestiness.",
  },
  diag_blood_machine = {
    name = "Diag Blood Machine",
  },
  king_complex = {
    cause = "Caused by the spirit of the King entering the patient's mind and taking over.",
    cure = "Cure - A Psychiatrist tells the patient how ridiculous he or she looks.",
    name = "King Complex",
    symptoms = "Symptoms - donning of colourful suede footwear and eating cheeseburgers.",
  },
  diag_x_ray = {
    name = "Diag X-ray",
  },
  pregnancy = {
    cause = "Cause - power cuts in urban areas.",
    cure = "Cure - Baby is removed in Operating Theatre, washed and presented to patient.",
    name = "Pregnant",
    symptoms = "Symptoms - faddish eating with consequent beer gut.",
  },
  fake_blood = {
    cause = "Cause - patient usually subject of practical joke.",
    cure = "Cure - Psychiatric calming is the only way to deal with this problem.",
    name = "Fake Blood",
    symptoms = "Symptoms - Red fluid in veins which evaporates on contact with clothing.",
  },
  diag_psych = {
    name = "Diag Psychiatrist",
  },
  invisibility = {
    cause = "Cause - being bitten by a radioactive (and invisible) ant.",
    cure = "Cure - A colourful liquid drunk in the Pharmacy soon restores the patient to full observability.",
    name = "Invisibility",
    symptoms = "Symptoms - patients suffer no discomfort. Indeed, many use the condition to play practical jokes on their families.",
  },
  golf_stones = {
    cause = "Cause - exposure to poison gas inside golf-balls.",
    cure = "Cure -These must be removed by an operation requiring two Surgeons.",
    name = "Golf Stones",
    symptoms = "Symptoms - delirium and advanced shame.",
  },
  diag_general_diag = {
    name = "Diag General",
  },
  infectious_laughter = {
    cause = "Cause - classic situation comedy.",
    cure = "Cure - A qualified Psychiatrist must remind the patient how serious this condition is.",
    name = "Infectious Laughter",
    symptoms = "Symptoms - helpless chortling and repetition of unfunny catchphrases.",
  },
  general_practice = {
    name = "General Practice",
  },
  baldness = {
    cause = "Cause - telling lies and making up stories to be popular.",
    cure = "Cure - Hair is seamlessly melded onto the patient's head using this painful machine.",
    name = "Baldness",
    symptoms = "Symptoms - shiny-headedness and embarrassment.",
  },
  heaped_piles = {
    cause = "Cause - standing around by water coolers.",
    cure = "Cure - A pleasant, yet powerfully acidic drink dissolves the piles from the inside.",
    name = "Heaped Piles",
    symptoms = "Symptoms - Patient feels like he/she is sitting on a bag of marbles.",
  },
  unexpected_swelling = {
    cause = "Cause - anything unexpected.",
    cure = "Cure - The swelling can only be reduced by lancing during an operation requiring two Surgeons.",
    name = "Unexpected Swelling",
    symptoms = "Symptom - swelling.",
  },
  jellyitis = {
    cause = "Cause - gelatin-rich diet and too much exercise.",
    cure = "Cure - The patient is immersed in the Jelly Vat in a special room for a bit.",
    name = "Jellyitis",
    symptoms = "Symptoms - excessive wobbliness and falling down a lot.",
  },
  hairyitis = {
    cause = "Cause - prolonged exposure to the moon.",
    cure = "Cure - An electrolysis machine removes the hair and seals up the pores.",
    name = "Hairyitis",
    symptoms = "Symptoms - sufferers experience enhanced sense of smell.",
  },
  alien_dna = {
    cause = "Cause - face huggers equipped with intelligent alien blood.",
    cure = "Cure - The DNA is mechanically removed, cleaned of alien elements and replaced quickly.",
    name = "Alien DNA",
    symptoms = "Symptoms - gradual alien metamorphosis and desire to destroy our cities.",
  },
  bloaty_head = {
    cause = "Cause - sniffing cheese and drinking unpurified rainwater.",
    cure = "Cure - The swollen head is popped, then reinflated to the correct PSI using a clever machine.",
    name = "Bloaty Head",
    symptoms = "Symptoms - very uncomfortable for the sufferer.",
  },
  gastric_ejections = {
    cause = "Cause - spicy Mexican or Indian food.",
    cure = "Cure - Drinking a special binding solution prevents anything being ejected.",
    name = "Gastric Ejections",
    symptoms = "Symptoms - half-digested food is emitted from the patient in random clusters.",
  },
  uncommon_cold = {
    cause = "Cause - small particles of snot in the air.",
    cure = "Cure - A big swig of uncommon cough medicine made from special ingredients in the Pharmacy will cure this.",
    name = "Uncommon Cold",
    symptoms = "Symptoms - runny nose, sneezing and discoloured lungs.",
  },
  corrugated_ankles = {
    cause = "Cause - driving over traffic calming measures in road.",
    cure = "Cure - A slightly toxic blend of herbs and spices is drunk to straighten out the ankles.",
    name = "Corrugated Ankles",
    symptoms = "Symptoms - Footwear does not fit snugly.",
  },
  sleeping_illness = {
    cause = "Cause - overactive sleep gland in the roof of the mouth.",
    cure = "Cure - A high dosage of powerful stimulant is administered by a Nurse.",
    name = "Sleeping Illness",
    symptoms = "Symptoms - Overwhelming desire to crash out everywhere.",
  },
  sweaty_palms = {
    cause = "Cause - fear of job interviews.",
    cure = "Cure - A Psychiatrist must talk the patient out of this made-up disease.",
    name = "Sweaty Palms",
    symptoms = "Symptoms - handshakes with patient are like grabbing a recently submerged sponge.",
  },
  serious_radiation = {
    cause = "Cause - mistaking plutonium isotopes for chewing gum.",
    cure = "Cure - The patient must be placed in a Decontamination Shower and cleansed properly.",
    name = "Serious Radiation",
    symptoms = "Symptoms - patients with this condition feel very, very unwell.",
  },
  diag_cardiogram = {
    name = "Diag Cardio",
  },
  diag_scanner = {
    name = "Diag Scanner",
  },
  gut_rot = {
    cause = "Cause - Mrs. O'Malley's Good Time Whisky Cough Mixture.",
    cure = "Cure - A Nurse can administer a selection of dissolved chemicals to coat the tum.",
    name = "Gut Rot",
    symptoms = "Symptoms - no cough but no stomach-wall lining either.",
  },
  iron_lungs = {
    cause = "Cause - inner-city smog mixed with kebab remains.",
    cure = "Cure - Two Surgeons operate to remove the cast solid lungs in the Theatre.",
    name = "Iron Lungs",
    symptoms = "Symptoms - ability to breathe fire and shout loudly underwater.",
  },
  broken_wind = {
    cause = "Cause - using a gymnasium treadmill after a meal.",
    cure = "Cure - a heavy mixture of special watery atoms is drunk rapidly in the Pharmacy.",
    name = "Broken Wind",
    symptoms = "Symptoms - upsetting the people directly behind the patient.",
  },
  kidney_beans = {
    cause = "Cause - crunching up ice cubes in drinks.",
    cure = "Cure - Two Surgeons must remove the beans without touching the sides of the kidney.",
    name = "Kidney Beans",
    symptoms = "Symptoms - pain and frequent trips to the toilet.",
  },
  transparency = {
    cause = "Cause - licking the yogurt from the foil tops of opened pots.",
    cure = "Cure - A Pharmacy drink of specially cooled and coloured water cures this disease.",
    name = "Transparency",
    symptoms = "Symptoms - flesh is rendered see-through and horrible.",
  },
  broken_heart = {
    cause = "Cause - someone richer, younger and thinner than the patient.",
    cure = "Cure - Two Surgeons open the chest and gently mend the heart whilst holding their breath.",
    name = "Broken Heart",
    symptoms = "Symptoms - weeping and RSI caused by hours of tearing up holiday photos.",
  },
  slack_tongue = {
    cause = "Cause - chronic overdiscussion of soap operas.",
    cure = "Cure - The tongue is placed in the Slicer Machine, and removed quickly, efficiently and painfully.",
    name = "Slack Tongue",
    symptoms = "Symptoms - tongue swells to five times its original length.",
  },
  tv_personalities = {
    cause = "Cause - daytime television.",
    cure = "Cure - A trained Psychiatrist must convince the patient to sell their TV and buy a radio.",
    name = "TV Personalities",
    symptoms = "Symptoms - delusions of being able to present a cookery show.",
  },
  ruptured_nodules = {
    cause = "Cause - bungee jumping in cold weather.",
    cure = "Cure - Two qualified Surgeons must removed the nodules using steady hands.",
    name = "Ruptured Nodules",
    symptoms = "Symptoms - inability to sit down in comfort.",
  },
  fractured_bones = {
    cause = "Cause - falling off high things onto concrete.",
    cure = "Cure - The cast is set then removed using a laser-driven removing machine.",
    name = "Fractured Bones",
    symptoms = "Symptoms - loud crack and inability to use afflicted limbs.",
  },
  chronic_nosehair = {
    cause = "Cause - Sniffing disdainfully at those worse off than the patient.",
    cure = "Cure - A disgusting hair-removal potion is taken orally, prepared by a Nurse in the Pharmacy.",
    name = "Chronic Nosehair",
    symptoms = "Symptoms - nosebeard a badger could make a nest in.",
  },
}
policy = {
  header = "HOSPITAL POLICY",
  diag_termination = "diagnosis termination",
  sliders = {
    guess = "GUESS AT CURE",
    send_home = "SEND HOME",
    stop = "STOP PROCEDURE",
    staff_room = "GO TO STAFF ROOM",
  },
  diag_procedure = "diagnosis procedure",
  staff_rest = "send staff to rest",
  staff_leave_rooms = "staff leave rooms",
}
competitor_names = {
  [1] = "ORAC",
  [2] = "COLOSSUS",
  [3] = "HAL",
  [4] = "MULTIVAC",
  [5] = "HOLLY",
  [6] = "DEEP THOUGHT",
  [7] = "ZEN",
  [8] = "LEON",
  [9] = "MARVIN",
  [10] = "AKIRA",
  [11] = "MOTHER",
  [12] = "JAYNE",
  [13] = "CORSIX",
  [14] = "ROUJIN",
  [15] = "EDVIN",
  [16] = "SAM",
  [17] = "CHARLIE",
  [18] = "ARTHUR",
  [19] = "MAGNUS",
  [20] = "SAL",
  [21] = "JOSHUA",
  [22] = "DANEEL",
  [23] = "OLIVAW",
  [24] = "NIC",
}
options_window = {
  fullscreen = "Fullscreen",
  cancel = "Cancel",
  browse = "Browse...",
  width = "Width",
  height = "Height",
  new_th_directory = "Here you can specify a new Theme Hospital installation directory. As soon as you choose the new directory the game will be restarted.",
  change_resolution = "Change resolution",
  back = "Back",
}
buy_objects_window = {
  price = "Price: ",
  choose_items = "Choose Items",
  total = "Total: ",
}
trophy_room = {
  wait_times = {
    award = {
      [1] = "Congratulations. Your hospital has consistently had very low queuing times. This is an important award.",
    },
    penalty = {
      [1] = "People in your hospital have to wait for too long. There are always unacceptable queues. You could manage your patients more efficiently, if you chose to.",
    },
  },
  happy_vips = {
    trophies = {
      [1] = "You have won the Nobel Prize for Impressing VIPs. Everyone who visited your hospital in the last year was highly complimentary about it.",
      [2] = "The Famous Person Agency would like to award you with the Celebrity Trophy for pleasing every VIP who visited your establishment. Consider yourself slightly famous, and almost one of us.",
      [3] = "Congratulations on winning the VIP TRIP award for making the lives of hard-working figures in the public eye better by pleasing all of those who visited your hospital. Marvellous.",
    },
  },
  hosp_value = {
    penalty = {
      [1] = "Your hospital has failed to achieve a decent value. You have made poor money management decisions. Remember, a good hospital is also an expensive hospital.",
    },
    awards = {
      [1] = "The Ministry of Health would like to take this opportunity to congratulate you on the impressive overall value of your hospital.",
    },
    regional = {
      [1] = "You are a financial whizz-kid. Your hospital is more valuable than all the other hospitals in the area put together.",
    },
  },
  rats_accuracy = {
    trophies = {
      [1] = "You are presented with the Syndicate Wars Accurate Shooting Trophy for being %d%% accurate at shooting rats.",
      [2] = "This trophy is to commemorate your incredible accuracy in killing %d%% of the rats you aimed at in your hospital in the last year.",
      [3] = "To commemorate the occasion of you killing %d%% of all the rats in your hospital, you are presented with the Dungeon Keeper Vermin-Free Trophy. CongRATulations!",
    },
  },
  all_cured = {
    awards = {
      [1] = "Congratulations on winning the Marie Curie Award for successfully treating all the patients in your hospital in the last year.",
    },
    trophies = {
      [1] = "The International Curing Foundation wish to honour the fact that you cured everybody in your hospital last year, by awarding you with the Cure-All Trophy.",
      [2] = "You have been presented with the No-ill Gargler Trophy for managing to cure every patient in your hospital in the last year.",
    },
  },
  best_value_hosp = {
    trophies = {
      [1] = "Congratulations on receiving the SqueakiKlean Trophy for the hospital with the best reputation over the last year. Well deserved it is too.",
    },
    penalty = {
      [1] = "Every hospital in the surrounding area is worth more than yours. Do something about this shameful state of affairs. Get some more expensive things in!",
    },
    regional = {
      [1] = "Congratulations on having the most valuable hospital in the game. Good work. Please try to keep it up.",
    },
  },
  high_rep = {
    penalty = {
      [1] = "You are to be disciplined for maintaining a very poor reputation throughout the last year. Make sure it improves in the future.",
      [2] = "Your hospital's reputation is the worst in the area. You are a disgrace. Do better or get another job.",
    },
    awards = {
      [1] = "Well done. You win a smallish award for achieving a pretty impressive reputation in the last year.",
      [2] = "Marvellous! Your hospital wins an award for building the best reputation during the last year.",
    },
    regional = {
      [1] = "Please accept the Bullfrog Award for the highest reputation in the last year in any hospital. Enjoy it - you've earned it.",
      [2] = "This year, your hospital's reputation has exceeded those of all the other hospitals put together. A major achievement.",
    },
  },
  consistant_rep = {
    trophies = {
      [1] = "You are hereby awarded the Cabinet Minister's Award for the most impeccable standards and highest reputation possible this year. Nice one.",
      [2] = "Congratulations on receiving the SqueakiKlean Trophy for the hospital with the best reputation over the last year. Well deserved it is too.",
    },
  },
  curesvdeaths = {
    awards = {
      [1] = "Hearty congratulations on achieving an impressive cures-to-deaths ratio in your hospital in the last year.",
    },
    penalty = {
      [1] = "Your ratio of cures to deaths is extremely poor. You should make sure that you cure a lot more people than you let die. Don't let the side down.",
    },
  },
  cleanliness = {
    regional_good = {
      [1] = "Your hospital has been noted as one of the least clean in the area. A dirty hospital is smelly and dangerous. You should pay more attention to mess.",
    },
    award = {
      [1] = "Inspectors note that your hospital is very clean. Clean hospitals are safe hospitals. Keep up the good work.",
    },
    regional_bad = {
      [1] = "Your hospital is the dirtiest in the region. Every other Administrator has managed to keep their corridors cleaner. You are a disgrace to the medical profession.",
    },
  },
  happy_patients = {
    awards = {
      [1] = "You can be smug about the fact that people in your hospital were very happy during the last year.",
      [2] = "People visiting your hospital were on-average happier during their treatment than at any other hospital in the game.",
    },
    penalty = {
      [1] = "People coming to your hospital find the experience miserable. You'll have to do much better if you want to earn the respect of the Ministry.",
      [2] = "People receiving treatment at your hospital were very unhappy about the state of the place. You should consider patient welfare more thoroughly.",
    },
  },
  emergencies = {
    regional_good = {
      [1] = "The Ministry recognises that your hospital handled emergencies better than any other hospital, last year and present you with this award.",
    },
    penalty = {
      [1] = "You have been poor at handling emergencies. Incoming emergency patients deserve prompt and accurate attention, which you have failed to give.",
    },
    regional_bad = {
      [1] = "Your hospital is the worst in the region at handling emergencies. It is your fault that you are languishing at the bottom of the local emergency treatment league.",
    },
    award = {
      [1] = "Congratulations: your efficient and effective handling of emergencies, have earned you this special award. Good work. ",
      [2] = "Your handling of emergencies is exceptional. This award is for being the absolute best at dealing with large influxes of sick and suffering.",
    },
  },
  gen_repairs = {
    awards = {
      [1] = "You are awarded a special prize for the alertness of your Handymen in keeping your hospital machinery well-maintained. Well done. Take a holiday.",
      [2] = "Your Handymen have performed better than those of any other hospital. This is a major achievement for which you are to be congratulated.",
      [3] = "Your machines are superbly maintained. The dedication shown by your Handymen is extraordinary. You all deserve this prestigious award. Marvellous work.",
    },
    penalty = {
      [1] = "Your Handymen have not maintained your machinery well. You should supervise them more carefully or hire more to deal with the workload.",
      [2] = "You have made a mess of maintenance. Your staff should look after equipment promptly and with care.",
    },
  },
  no_deaths = {
    trophies = {
      [1] = "You have won the No-Croak Award for keeping 100 per cent of your patients alive in the last year.",
      [2] = "The Life Goes On Corporation present you with this trophy for achieving no deaths whatever in the last year.",
      [3] = "You have been awarded the Staying Alive Trophy for managing to avoid any deaths whatsoever in your fine hospital this year. Great.",
    },
    penalty = {
      [1] = "The number of deaths in your hospital in the last year was acceptably high. Pay more attention to your work. Make certain more people survive in future.",
      [2] = "Your hospital is a risk to patients' health. You are expected to cure lots of people, not let them die.",
    },
    awards = {
      [1] = "You have earned this award to commemorate the low number of deaths at your hospital, this year. This is great.",
      [2] = "Your genius has kept deaths in your hospital to a minimum. You can be extremely pleased with this result.",
    },
    regional = {
      [1] = "The death toll in your hospital last year was lower than that of any other hospital. Please accept this award.",
    },
  },
  rats_killed = {
    trophies = {
      [1] = "You are awarded the Anti-Vermin Trophy for shooting %d rats in your hospital during the last year.",
      [2] = "You have qualified to receive this trophy from the Federation Against Rats and Mice, owing to your exceptional rat-shooting abilities in killing %d creatures.",
      [3] = "You have qualified for the Ratblast Trophy for exceptional skills in dispatching %d rats in your hospital in the last year.",
    },
  },
  happy_staff = {
    trophies = {
      [1] = "You are awarded the Smiley Trophy for keeping your hard-working staff as happy as possible.",
      [2] = "The Adami Institute of Happiness reward you for having no unhappy staff in your hospital last year by giving you this trophy.",
      [3] = "This Trophy, the Beam-more Cup is hereby awarded to you for keeping all your staff happy above and beyond the call of duty during the last year. Smiles all round!",
    },
    awards = {
      [1] = "Your staff present you with this award. They say there's room for improvement but your treatment of them was generally good.",
      [2] = "Your staff are so happy working for you they can't keep the grins off their faces. You are a superb manager.",
    },
    penalty = {
      [1] = "Your staff wish it to be known that they are very unhappy. Good staff are an asset. Make yours happier or you'll lose the lot one day.",
    },
    regional_good = {
      [1] = "Your staff are happier than those at any other hospital. Happy staff means more profit and less death. The Ministry is pleased.",
    },
    regional_bad = {
      [1] = "Your staff have all been very miserable for the past year. You should have noticed. As it is, every other hospital has got happier staff than you.",
    },
  },
  healthy_plants = {
    awards = {
      [1] = "Congratulations on winning the Gro-More Fertiliser award for keeping your plants extremely healthy during the last year.",
    },
    trophies = {
      [1] = "Friends of the Pot Plants wish to bestow upon you the Green Trophy of Health for keeping all your plants in good condition during the past twelve months.",
      [2] = "Triffic Triffids would like to present you with the Greenfinger Trophy for keeping your hospital's plants in the best of health during the last year.",
    },
  },
  sold_drinks = {
    trophies = {
      [1] = "The Global Dentists Association is proud to award you with this trophy and plaque for selling lots of canned drinks in your hospital.",
      [2] = "Your hospital has been awarded the Fizzy-Bizz Trophy for Soft Drink Retailing in recognition of the number of drinks sold in your hospital in the last year.",
      [3] = "On behalf of DK Fillings Inc, you are presented with this chocolate-covered trophy to commemorate the extraordinary number of soft drinks sold in your hospital this year.",
    },
  },
  many_cured = {
    trophies = {
      [1] = "Congratulations on winning the Marie Curie Award for successfully treating nearly all the patients in your hospital in the last year.",
      [2] = "The International Curing Foundation wish to honour the fact that you cured a vast number of people in your hospital last year, by awarding you with the Cure-A-Lot Trophy.",
      [3] = "You have been presented with the No-ill Gargler Trophy for managing to cure a huge percentage of the patients in your hospital in the last year.",
    },
    penalty = {
      [1] = "Your hospital is failing to give effective cures to patients who need them. Concentrate on your cures in order to make them more effective.",
      [2] = "Your hospital is less effective at curing patients than any other. You have let the Ministry down and you've let yourself down. We'll say no more.",
    },
    awards = {
      [1] = "Congratulations on curing loads of people during the last year. Lots of folks feel much better, thanks to your work.",
      [2] = "Please accept this award for having cured more patients than any other hospital. A sterling performance.",
    },
    regional = {
      [1] = "You are hereby awarded the ultimate cure award for having cured more people than all the other hospitals put together.",
    },
  },
  pop_percentage = {
    awards = {
      [1] = "Note that you gained a high share of the town population in your hospital in the last year. Well done.",
      [2] = "Congratulations. A higher share of the local population visits your hospital than any of the other institutions.",
      [3] = "Brilliant. You have lured more of the population into your hospital than has visited all the other hospitals put together.",
    },
    penalty = {
      [1] = "Very few people have come to your hospital this year. To make money, your institute needs paying sufferers.",
      [2] = "Every hospital in the same area managed to get a bigger share of the population through its doors than you. You should be very embarrassed.",
    },
  },
  research = {
    regional_good = {
      [1] = "Your research has kept your hospital abreast of the latest developments. Your research staff deserve this award. Good one.",
    },
    penalty = {
      [1] = "You have been poor at researching new cures, equipment and drugs. This is very bad, as technological advancement is vital.",
    },
    regional_bad = {
      [1] = "Every other hospital in the region is better at research than you. As research should be crucially important to your hospital, the Ministry is furious.",
    },
    awards = {
      [1] = "Your research has kept your hospital abreast of the latest developments. Your research staff deserve this award. Good one.",
      [2] = "During the last year, you have researched more drugs and equipment than anyone could have hoped. Please accept this award from all of us at the Ministry.",
    },
  },
  reputation = "REPUTATION",
  cash = "CASH",
}
menu_list_window = {
  save_date = "Modified",
  name = "Name",
  back = "Back",
}
menu_options_volume = {
  [50] = "  50%  ",
  [100] = "  100%  ",
  [30] = "  30%  ",
  [60] = "  60%  ",
  [90] = "  90%  ",
  [10] = "  10%  ",
  [20] = "  20%  ",
  [40] = "  40%  ",
  [80] = "  80%  ",
  [70] = "  70%  ",
}
menu_file_load = {
  [1] = "  GAME 1  ",
  [2] = "  GAME 2  ",
  [3] = "  GAME 3  ",
  [4] = "  GAME 4  ",
  [5] = "  GAME 5  ",
  [6] = "  GAME 6  ",
  [7] = "  GAME 7  ",
  [8] = "  GAME 8  ",
}
menu_file = {
  quit = "  QUIT  ",
  save = "  SAVE  ",
  load = "  LOAD  ",
  restart = "  RESTART  ",
}
rooms_long = {
  ultrascan = "Ultrascan Room",
  research_room = "Research Dept",
  general = "General",
  gps_office = "GP's Office",
  inflation = "Inflation Room",
  staffroom = "Staff Room",
  jelly_vat = "Jelly Vat",
  scanner = "Scanner Room",
  emergency = "Emergency",
  decontamination = "Decontamination",
  corridors = "Corridors",
  cardiogram = "Cardiogram Room",
  ward = "Ward",
  training_room = "Training Room",
  psychiatric = "Psychiatric Room",
  operating_theatre = "Operating Theatre",
  dna_fixer = "DNA Fixer",
  tongue_clinic = "Slack Tongue Clinic",
  hair_restoration = "Hair Restorer",
  general_diag = "General Diagnosis",
  pharmacy = "Pharmacy",
  fracture_clinic = "Fracture Clinic",
  toilets = "Toilet",
  electrolysis = "Electrolysis Clinic",
  x_ray = "X-ray Room",
  blood_machine = "Blood Machine Room",
}
save_game_window = {
  caption = "Save Game",
  new_save_game = "New Savegame",
}
fax = {
  epidemic_result = {
    fine_amount = "The Government have declared a national emergency and are fining you %d.",
    close_text = "Hurrah!",
    hospital_evacuated = "The Health Board has had no choice but to evacuate your hospital.",
    succeeded = {
      part_1_name = "The Health Inspector has heard rumours that your institution was dealing with a bad case of %s.",
      part_2 = "However he has not managed to find evidence to corroborate these rumours.",
    },
    compensation_amount = "The Government have decided to award you %d compensation for the damage that these lies have done your hospital's good name.",
    failed = {
      part_1_name = "Having attempted to hide the fact that they were facing a contagious outbreak of %s",
      part_2 = "your hospital staff have caused the disease to be spread to the general public who live near the hospital.",
    },
    rep_loss_fine_amount = "The newspapers will have a field day over this. Your reputation will be severely tarnished. Plus, you'll get a fine of %d.",
  },
  vip_visit_query = {
    choices = {
      invite = "Issue Official Invitation to the V.I.P.",
      refuse = "Fob the V.I.P off with excuses.",
    },
    vip_name = "%s has expressed a wish to visit your hospital",
  },
  vip_visit_result = {
    telegram = "Telegram!",
    remarks = {
      good = {
        [1] = "What a well-run hospital. Thanks for inviting me to it.",
        [2] = "Hmm. Not a bad medical establishment, certainly.",
        [3] = "I did enjoy your charming hospital. Now, anyone fancy a curry at the Taj?",
      },
      super = {
        [1] = "What a storming hospital. When I'm next seriously ill, take me there.",
        [2] = "Now that's what I call a hospital.",
        [3] = "That's a super hospital. And I should know; I've been in a few.",
      },
      bad = {
        [1] = "Why did I bother? It was worse than going to see a four-hour opera!",
        [2] = "I'm disgusted by what I saw. Call that a hospital? Pig-sty, more like!",
        [3] = "I'm fed up of being in the public spotlight and visiting smelly holes like this! I resign.",
      },
      free_build = {
        [1] = "It is a very nice hospital you have there! Not very hard to get it working without money limitations though, eh?",
        [2] = "I'm no economist, but I think I could run this hospital too if you know what I mean...",
        [3] = "A very well run hospital. Watch out for the recession though! Right... you didn't have to worry about that.",
      },
      mediocre = {
        [1] = "Well, I've seen worse. But you should make some improvements.",
        [2] = "Oh dear. Not a nice place to go if you're feeling peaky.",
        [3] = "It's a standard hospital, to be honest. Frankly, I expected more.",
      },
      very_bad = {
        [1] = "What a dump. I'm going to try and get it closed down.",
        [2] = "I have never seen such a dreadful hospital. What a disgrace!",
        [3] = "I'm shocked. You can't call that a hospital! I'm off for a pint.",
      },
    },
    rep_boost = "Your reputation in the community has been boosted.",
    vip_remarked_name = "After visiting your hospital, %s remarked:",
    cash_grant = "You have been awarded a cash grant of %d.",
    rep_loss = "Your reputation has suffered accordingly.",
    close_text = "Thank you for visiting the hospital.",
  },
  disease_discovered_patient_choice = {
    need_to_build = "You must build a %s to be able to deal with this.",
    need_to_employ = "Employ a  %s to be able to handle this situation.",
    what_to_do_question = "What do you want to do with the patient?",
    guessed_percentage_name = "Your team has had to guess at a patient's condition. There is a %d per cent chance that it is %s",
    choices = {
      send_home = "Send Patient home.",
      research = "Send patient to Research Department.",
      wait = "Get Patient to wait in the hospital for a while.",
    },
    disease_name = "Your team has discovered a new condition. It is %s",
    need_to_build_and_employ = "If you build a %s and employ a %s you can succeed.",
    can_not_cure = "You cannot cure this disease.",
  },
  emergency_result = {
    earned_money = "Out of a maximum bonus of %d, you have earned %d.",
    close_text = "Click to exit.",
    saved_people = "You saved %d people out of a total of %d.",
  },
  disease_discovered = {
    discovered_name = "Your team has discovered a new condition. It is %s",
    need_to_employ = "Employ a %s to be able to handle this crisis.",
    need_to_build_and_employ = "If you build a %s and employ a %s you can succeed.",
    need_to_build = "You must build a %s to be able to deal with this.",
    close_text = "A new condition has been found.",
    can_cure = "You can deal with this disease.",
  },
  emergency = {
    locations = {
      [1] = "Thatcher's Chemical Plant.",
      [2] = "Snide University.",
      [3] = "the Paraquat Gardening Centre.",
      [4] = "the Dangerous Substances Research Institute.",
      [5] = "the Morris Dancers Convention.",
      [6] = "the Frog and Bull pub.",
      [7] = "Big Dave's Funeral Parlour and Off-Licence.",
      [8] = "the Taj curry house.",
      [9] = "Bert's Used Petrochemical Emporium.",
    },
    num_disease = "There are %d people with %s and they require immediate attention.",
    cure_possible_drug_name_efficiency = "You already have the required equipment and skills. You have the drug they need. It is %s and the drug is %d per cent effective.",
    cure_not_possible_employ = "You will need to employ a %s",
    free_build = "If you are successful your reputation will increase but if you fail your reputation will be seriously dented.",
    cure_not_possible = "You cannot cure this disease at the moment.",
    num_disease_singular = "There is 1 person with %s and they require immediate attention.",
    cure_possible = "You have the right equipment and skills, so you should be able to handle this emergency.",
    choices = {
      accept = "Yes. I am ready to handle this emergency. ",
      refuse = "No. I refuse to handle this emergency.",
    },
    location = "There has been an incident at %s",
    cure_not_possible_build = "You will need to build a %s",
    cure_not_possible_build_and_employ = "You will need to build a %s and employ a %s",
    bonus = "There is a maximum bonus of %d available for handling this emergency. If you fail, though, your reputation will be seriously dented.",
  },
  choices = {
    decline_new_level = "Continue playing a while longer",
    accept_new_level = "Move on to the next level",
    return_to_main_menu = "Return to the main menu",
  },
  debug_fax = {
    text4 = "FACTORS  : DOCS %d  NURSES %d  AREA %d  ROOMS %d  PRICING %d",
    text5 = "CONTRIBN : DOCS %d  NURSES %d  AREA %d  ROOMS %d  PRICING %d PERCENT",
    text3 = "FIGURES  : DOCS %d  NURSES %d  AREA %d  ROOMS %d  PRICING %d",
    text9 = "DISASTERS %d ALLOWED (MTHS) %d (%d)REDUCTION %d",
    close_text = "Yeah, yeah, yeah!",
    text1 = "BEST COUNT %d",
    text6 = "THE FOLLOWING FACTORS ARE ALSO APPLIED",
    text8 = "AMENITIES %d PEEPS HANDLED %d REDUCTION %d",
    text2 = "TOTAL PEOPLE IN HOSPITAL %d CHECKING AGAINST %d",
    text10 = "KILLS %d ALLOWED (MTHS) %d (%d) REDUCTION %d",
    text11 = "PEOPLE THIS MONTH %d",
    text7 = "REPUTATION: %d EXPECTED %d REDUCTION %d",
  },
  epidemic = {
    cover_up_explanation_1 = "However if you attempt a cover-up, you have a limited time to cure all infected patients before the Health Authorities find out.",
    cover_up_explanation_2 = "If a Health Inspector does visit, and finds an epidemic cover-up still in progress, he can take drastic action against you.",
    choices = {
      cover_up = "Attempt to cure all infected patients in the allotted time and before anyone leaves your hospital.",
      declare = "Declare an Epidemic. Pay fine and take a reputation hit.",
    },
    disease_name = "Your Doctors have discovered a contagious strain of %s.",
    declare_explanation_fine = "If you declare an epidemic, you pay a fine of %d, take a reputation hit and all your patients will be vaccinated automatically.",
  },
  diagnosis_failed = {
    choices = {
      send_home = "Send Patient home.",
      take_chance = "Take a chance on the possible cure.",
      wait = "Get Patient to wait, while you build more diagnosis rooms.",
    },
    situation = "We have exhausted all our diagnosis machines on this patient and we are still not sure what is wrong.",
    what_to_do_question = "What shall we do with the patient?",
    partial_diagnosis_percentage_name = "There is a %d per cent chance that we have identified what type of %s the patient has.",
  },
}
drug_companies = {
  [1] = "Drugs-U-Like",
  [2] = "Cures R Us",
  [3] = "Jagged Little Pill Co.",
  [4] = "Pootle Fenster Ltd.",
  [5] = "Omnidrug Corp.",
}
humanoid_name_ends = {
  [1] = "SMITH",
  [2] = "WICK",
  [3] = "CLIFFE",
  [4] = "SON",
  [5] = "INGTON",
  [6] = "BURY",
  [7] = "TON",
  [8] = "SON",
  [9] = "LEY",
  [10] = "BERRY",
  [11] = "BAUM",
  [12] = "LAN",
  [13] = "HAM",
  [14] = "SILL",
  [15] = "WIN",
  [16] = "LET",
  [17] = "ERS",
  [18] = "TON",
  [19] = "MOND",
  [20] = "MAN",
  [21] = "ELTON",
  [22] = "E",
  [23] = "MORE",
  [24] = "MOOR",
  [25] = "LET",
  [26] = "LIN",
}
menu_debug_overlay = {
  heat = "  TEMPERATURE  ",
  byte_0_1 = "  BYTE 0 & 1  ",
  byte_6 = "  BYTE 6  ",
  flags = "  FLAGS  ",
  byte_7 = "  BYTE 7  ",
  byte_5 = "  BYTE 5  ",
  byte_floor = "  BYTE FLOOR  ",
  positions = "  POSITIONS  ",
  byte_w_wall = "  BYTE W WALL  ",
  parcel = "  PARCEL  ",
  byte_n_wall = "  BYTE N WALL  ",
  none = "  NONE  ",
}
confirmation = {
  abort_edit_room = "You are currently building or editing a room. If all required objects are placed it will be finished, but otherwise it will be deleted. Continue?",
  return_to_blueprint = "Are you sure you want to return to the Blueprint mode?",
  restart_level = "Are you sure you want to restart the level?",
  delete_room = "Do you really wish to delete this room?",
  quit = "You have chosen to Quit. Are you really sure you want to leave the game?",
  needs_restart = "Changing this setting requires CorsixTH to restart. Any unsaved progress will be lost. Are you sure you want to do this?",
  overwrite_save = "A game has already been saved in this slot. Are you sure you want to overwrite it?",
  sack_staff = "Are you sure you want to sack this member of staff?",
  replace_machine = "Are you sure you want to replace the %s for $%d?",
}
months = {
  [1] = "Jan",
  [2] = "Feb",
  [3] = "Mar",
  [4] = "Apr",
  [5] = "May",
  [6] = "Jun",
  [7] = "Jul",
  [8] = "Aug",
  [9] = "Sep",
  [10] = "Oct",
  [11] = "Nov",
  [12] = "Dec",
}
dynamic_info = {
  patient = {
    emergency = "Emergency: %s",
    guessed_diagnosis = "Guessed diagnosis: %s ",
    diagnosis_progress = "Diagnosis progress",
    actions = {
      sent_to_other_hospital = "Referred elsewhere",
      prices_too_high = "Your prices are far too high - I'm going home",
      no_gp_available = "Waiting for you to build a GP's office",
      waiting_for_treatment_rooms = "Waiting for you to build a treatment room for me",
      dying = "Dying!",
      no_diagnoses_available = "No more diagnoses available - I'm going home",
      epidemic_sent_home = "Sent home by Inspector",
      cured = "Cured!",
      waiting_for_diagnosis_rooms = "Waiting for you to build some more diagnosis facilities",
      epidemic_contagious = "I am contagious",
      awaiting_decision = "Awaiting your decision",
      sent_home = "Sent Home",
      fed_up = "Fed up and leaving",
      no_treatment_available = "No treatment available - I'm going home",
      on_my_way_to = "On my way to %s",
      queueing_for = "Queuing for %s",
    },
    diagnosed = "Diagnosed: %s ",
  },
  health_inspector = "Health Inspector",
  vip = "VIP Visitor",
  object = {
    times_used = "Times Used %d",
    queue_size = "Queue Size %d",
    strength = "Strength %d",
    queue_expected = "Queue Expected %d",
  },
  staff = {
    ability = "Ability",
    psychiatrist_abbrev = "Psych.",
    actions = {
      going_to_repair = "Going to repair %s",
      fired = "Fired",
      waiting_for_patient = "Waiting for patient",
      wandering = "Just wandering around",
      heading_for = "Heading for %s",
    },
    tiredness = "Tiredness",
  },
}
introduction_texts = {
  level17 = {
    [1] = "Last word of warning - keep a keen eye on your Reputation - this is what will attract the patients from far and wide to your establishment. ",
    [2] = "If you don't kill too many people and keep them reasonably happy you shouldn't have too much trouble on this level !//",
    [3] = "You're on you own now. Good luck and all that.",
  },
  level1 = {
    [1] = "Welcome to your first hospital!//",
    [2] = "Get the place up and running by placing a Reception Desk, building a GP's Office and hiring a Receptionist and Doctor. ",
    [3] = "Then wait for some business to come along.",
    [4] = "It's a good idea to build a Psychiatry Dept and hire a Doctor with Psychiatric qualifications. ",
    [5] = "A Pharmacy and Nurse are also essential for curing your patients. ",
    [6] = "Watch out for rogue cases of Bloaty Head - an Inflation Room will soon sort those out. ",
    [7] = "You'll be looking to cure 10 people and make sure your reputation doesn't drop below 200.",
  },
  level9 = {
    [1] = "Having filled the Ministry's bank account and paid for a new limousine for the Minister himself, you can now get back to creating a caring, well-run hospital for the benefit of the unwell and needy. ",
    [2] = "You can expect a lot of different problems to crop up here.",
    [3] = "If you have enough well-trained staff and rooms, you should have all the angles covered. ",
    [4] = "Your hospital will need to be worth $200,000, and you'll need $400,000 in the bank. ",
    [5] = "Any less and you won't be able to finish the level.",
  },
  level2 = {
    [1] = "There is a greater variety of ailments in this area. ",
    [2] = "Set up your hospital to deal with more patients, and plan to build a Research Department. ",
    [3] = "Remember to keep your establishment clean, and try to get your reputation as high as possible - you'll be dealing with diseases like Slack Tongue, so you'll need a Slack Tongue Clinic. ",
    [4] = "You can also build a Cardiogram to help you diagnose new illnesses. ",
    [5] = "Both these rooms will need to be researched before you can build them. Now you can also buy extra plots of land to expand your hospital - use the Town map for this. ",
    [6] = "Aim for a reputation of 300 a bank balance of $10,000 and 40 people cured.",
  },
  level7 = {
    [1] = "Here you'll be under close scrutiny from the Ministry of Health, so make sure that your accounts show that you're making a lot of cash, and that your reputation is riding high. ",
    [2] = "We can't afford unnecessary deaths - they're bad for business. ",
    [3] = "Make sure your staff are in tip-top form, and you've got all the equipment you need. ",
    [4] = "Get a reputation of 600, plus $200,000 in the bank.",
  },
  level5 = {
    [1] = "This will be a busy hospital, dealing with a wide variety of cases. ",
    [2] = "Your Doctors are all fresh from med school, so it's going to be vital to build a training room and train them to acceptable levels. ",
    [3] = "You only have three Consultants to help teach your inexperienced staff, so keep them happy. ",
    [4] = "Note, too, that the hospital's foundations straddle the San Android geological fault. ",
    [5] = "There's the ever-present risk of earthquakes. ",
    [6] = "They will cause significant damage to your machines, and disrupt the smooth running of your hospital. ",
    [7] = "Get your reputation up to the 400 mark, and bank a cool $50,000 to succeed. Also, cure 200 patients.",
  },
  level4 = {
    [1] = "Keep all your patients happy, deal with them as efficiently as you can and keep deaths to an absolute minimum.",
    [2] = "Your reputation is at stake, so make sure you get it as high as possible. ",
    [3] = "Don't worry about money too much - that'll come as your vital reputation grows. ",
    [4] = "You'll be able to train your Doctors to widen their abilities, too. ",
    [5] = "They could well be dealing with patients who seem to be less opaque than most. ",
    [6] = "Achieve a reputation of over 500.",
  },
  level14 = {
    [1] = "There is yet one more challenge - the totally unexpected surprise hospital. ",
    [2] = "If you make a success of this, you will be the winner above all other winners. ",
    [3] = "Don't expect it to be a piece of cake, though, because it's the toughest assignment you'll ever face. ",
    [4] = "Good luck!",
  },
  level15 = {
    [1] = "Okay that's the basic mechanics of putting a hospital together.//",
    [2] = "Your Doctors are going to need all the help they can get to diagnose some of these patients. You can assist them by ",
    [3] = "building another diagnosis facility such as the General Diagnosis Room.",
  },
  level8 = {
    [1] = "It's up to you to set up the most efficient and cost-effective hospital possible. ",
    [2] = "The people around here are pretty well-off, so fleece them for as much dosh as you can. ",
    [3] = "Remember, curing people is all very nice, but you really NEED the money it brings. ",
    [4] = "Take these sick people to the cleaners. ",
    [5] = "Amass a whopping $300,000 to complete this level.",
  },
  level13 = {
    [1] = "Your incredible skill as a hospital administrator has come to the attention of the Special Secret Division of the Secret Special Service. ",
    [2] = "They have a special bonus for you; there's a rat-infested hospital in need of an efficient Terminator. ",
    [3] = "You must shoot as many rats as possible before the Handymen clean up all the rubbish. ",
    [4] = "Think you're up to the task?",
  },
  demo = {
    [1] = "Welcome to the demo hospital!",
    [2] = "Unfortunately the demo version only contains this level (apart from custom levels). However, there is more than enough to do here to keep you busy for a while!",
    [3] = "You will encounter various diseases that require different rooms to cure. From time to time, emergencies may occur. And you will need to research additional rooms using a research room.",
    [4] = "Your goal is to earn $100,000, have a hospital value of $70,000 and a reputation of 700, while having cured at least 75% of your patients.",
    [5] = "Make sure your reputation does not fall below 300 and that you don't kill off more than 40% of your patients, or you will lose.",
    [6] = "Good luck!",
  },
  level16 = {
    [1] = "Once you have diagnosed some of the patients you will need to build treatment facilities and clinics to cure them - a good one to start off ",
    [2] = "with is the Pharmacy. You'll also need a Nurse to dispense the various drugs in the Pharmacy.",
  },
  level6 = {
    [1] = "Use all your knowledge to set up a smooth, well-run hospital which makes a healthy profit and can deal with anything the sickly public can throw at it. ",
    [2] = "You'll need to be aware that the atmosphere around here is particularly good at carrying germs and infections. ",
    [3] = "Unless you keep your institution scrupulously clean you could be facing a series of epidemics amongst the patients. ",
    [4] = "Make sure you earn yourself $150,000, and that your hospital is worth over $140,000.",
  },
  level12 = {
    [1] = "You've got the mother of all challenges now. ",
    [2] = "Impressed with your success, the Ministry has got the top job for you; they want someone to build another ultimate hospital, make a vast amount of dosh and have an incredible reputation. ",
    [3] = "You'll also be expected to buy all the land you can, cure everything (and we mean everything) and win all the awards. ",
    [4] = "Think you're up to it?",
    [5] = "Earn $650,000, cure 750 people, and get a reputation of 800 to win this one.",
  },
  level3 = {
    [1] = "You'll be setting up your hospital in an affluent area this time. ",
    [2] = "The Ministry of Health is looking to you to secure a healthy profit here. ",
    [3] = "You'll need to gain a good reputation to begin with, but once the hospital is ticking over, concentrate on earning as much cash as you can. ",
    [4] = "There is also the chance of Emergencies occurring. ",
    [5] = "These are when large numbers of people arrive at once, all with the same condition. ",
    [6] = "Curing them all within a time limit earns you a better reputation and a big bonus. ",
    [7] = "Diseases like The King Syndrome could occur, and you should budget for building an Operating Theatre with a Ward close by. ",
    [8] = "Earn yourself $20,000 to make the grade.",
  },
  level10 = {
    [1] = "As well as covering all the illnesses which crop up in this neck of the woods, the Ministry request that you spend some time concentrating on the efficiency of your drugs. ",
    [2] = "There have been some complaints from Ofsick, the Health Watchdog, so in order to look good you must make sure all your drugs are extremely efficient. ",
    [3] = "Also, make sure your hospital is above reproach as well. Keep those deaths down. ",
    [4] = "As a hint, you might like to keep space free for a Jelly Vat. ",
    [5] = "Develop all your drugs to at least 80 per cent efficiency, get a reputation of 650 and stash $500,000 in the bank to win. ",
  },
  level11 = {
    [1] = "You've been given the chance to build the ultimate in hospitals. ",
    [2] = "This is an exceedingly prestigious area, and the Ministry would like to see the best possible hospital. ",
    [3] = "We'll be expecting you to make big money, have a superbly high reputation and cover every possible eventuality. ",
    [4] = "It's an important job, this. ",
    [5] = "You'll have to be something special to pull it off. ",
    [6] = "Note, too, that there have sightings of UFOs in the area. Make sure your staff are prepared for some unexpected visitors. ",
    [7] = "Your hospital will need to be worth $240,000, you'll need $500,000 in the bank and your reputation will need to be 700.",
  },
  level18 = {
  },
}
humanoid_name_starts = {
  [1] = "GOLD",
  [2] = "HIGH",
  [3] = "AND",
  [4] = "BEN",
  [5] = "BAN",
  [6] = "BILL",
  [7] = "WY",
  [8] = "WAT",
  [9] = "POD",
  [10] = "KING",
  [11] = "BAR",
  [12] = "PET",
  [13] = "MAN",
  [14] = "BOY",
  [15] = "WAR",
  [16] = "JACK",
  [17] = "CRAB",
  [18] = "FISH",
  [19] = "WATER",
  [20] = "MIL",
  [21] = "BY",
  [22] = "FEN",
  [23] = "RICH",
  [24] = "SCOT",
  [25] = "BUR",
  [26] = "PIKE",
  [27] = "CUR",
  [28] = "WHIT",
  [29] = "BINN",
  [30] = "BONN",
  [31] = "POG",
  [32] = "WRIGHT",
  [33] = "KER",
}
transactions = {
  severance = "Severance Pay",
  research = "Research Costs",
  eoy_trophy_bonus = "End of year Trophy Bonus",
  buy_object = "Buy Object",
  cure_colon = "Cure:",
  epidemy_coverup_fine = "Epidemic Coverup Fine",
  final_treat_colon = "Final Treat:",
  jukebox = "Income: Jukebox",
  loan_interest = "Loan Interest",
  overdraft = "Overdraft Interest",
  wages = "Wages",
  loan_repayment = "Loan Repayment",
  personal_bonus = "Personal Bonus Payment",
  drug_cost = "Drug Cost",
  cure = "Cure",
  heating = "Heating Costs",
  treat_colon = "Treat:",
  compensation = "Government Compensation",
  epidemy_fine = "Epidemic Fine",
  buy_land = "Buy Land",
  research_bonus = "Research Bonus",
  general_bonus = "General Bonus Payment",
  deposit = "Treatment Deposit",
  eoy_bonus_penalty = "End of year Bonus/Penalty",
  cheat = "Cheat Money",
  drinks = "Income: Drinks Machines",
  vaccination = "Vaccination",
  advance_colon = "Advance:",
  vip_award = "VIP Cash Award",
  hire_staff = "Hire Staff",
  bank_loan = "Bank Loan",
  machine_replacement = "Replacement Machine Cost",
  emergency_bonus = "Emergency Bonus Payment",
  build_room = "Build Room",
  insurance_colon = "Insurance:",
  sell_object = "Sell Object",
}
object = {
  chair = "Chair",
  litter = "Litter",
  sofa = "Sofa",
  operating_table = "Operating table",
  bed2 = "Bed",
  bench = "Bench",
  scanner = "Scanner",
  couch = "Couch",
  blood_machine = "Blood Machine",
  table1 = "Table",
  video_game = "Video Game",
  lamp = "Lamp",
  op_sink2 = "Sink",
  door = "Door",
  auto_autopsy = "Auto Autopsy",
  reception_desk = "Reception desk",
  hair_restorer = "Hair restorer",
  projector = "Projector",
  crash_trolley = "Crash trolley",
  tv = "TV",
  ultrascanner = "Ultrascanner",
  surgeon_screen = "Surgeon screen",
  litter_bomb = "Litter Bomb",
  inflator = "Inflator",
  table2 = "Table",
  desk = "Desk",
  pool_table = "Pool table",
  x_ray_viewer = "X-ray viewer",
  radiation_shield = "Radiation shield",
  bed = "Bed",
  swing_door2 = "Swing door",
  console = "Console",
  op_sink1 = "Sink",
  bookcase = "Bookcase",
  drinks_machine = "Drinks machine",
  comfortable_chair = "Comfortable chair",
  skeleton = "Skeleton",
  computer = "Computer",
  bin = "Bin",
  pharmacy_cabinet = "Pharmacy cabinet",
  radiator = "Radiator",
  cast_remover = "Cast remover",
  atom_analyser = "Atom Analyser",
  plant = "Plant",
  jelly_moulder = "Jelly Moulder",
  cardio = "Cardio",
  toilet = "Toilet",
  electrolyser = "Electrolyser",
  fire_extinguisher = "Fire extinguisher",
  bed3 = "Bed",
  swing_door1 = "Swing door",
  lecture_chair = "Lecture chair",
  screen = "Screen",
  toilet_sink = "Sink",
  shower = "Shower",
  gates_of_hell = "Gates of Hell",
  entrance_right = "Entrance right door",
  entrance_left = "Entrance left door",
  slicer = "Slicer",
  dna_fixer = "DNA-fixer",
  x_ray = "X-ray",
  cabinet = "Filing cabinet",
}
letter = {
  [1] = {
    [1] = "Dear %s//",
    [2] = "Marvellous! You have handled the running of this hospital superbly. Us bigwigs at the Ministry of Health would like to know if you'd be interested in taking on a larger project. There's a job we think you'd be perfect for. The salary would be $%d. Give it some thought.//",
    [3] = "Are you interested in a job at %s Hospital?",
  },
  [2] = {
    [1] = "Dear %s//",
    [2] = "Jolly good! You have made excellent progress at your hospital. We have found somewhere else for you to run, if you fancy a change of scenery and a fresh set of challenges. You don't have to accept, but it might be worthwhile if you do. The salary is $%d//",
    [3] = "Do you want a job at %s Hospital?",
  },
  [3] = {
    [1] = "Dear %s//",
    [2] = "You have been vastly successful during your tenure at this hospital. To this end, we predict great things for you, and would like to offer you a position elsewhere. The salary would be $%d, and we think you'd love the new challenge it would pose.//",
    [3] = "Would you like a position at %s Hospital?		  ",
  },
  [4] = {
    [1] = "Dear %s//",
    [2] = "Congratulations! We at the Ministry are very impressed by your hospital-running abilities. You are certainly a golden boy in the Health Department. We think you'd prefer a slightly tougher job, though. You'd be paid a salary of $%d, but the decision is up to you.//",
    [3] = "Are you interested in working at %s Hospital?",
  },
  [5] = {
    [1] = "Dear %s//",
    [2] = "Hello again. We respect your wishes not to move from this charming hospital, but would urge you to reconsider. We will offer you the great salary of $%d if you are prepared to move to another hospital and get it running as smoothly.//",
    [3] = "Would you like to move to %s Hospital now?",
  },
  [6] = {
    [1] = "Dear %s//",
    [2] = "Greetings. We know how happy you've been at this lovely and well-run institution, but we think you should consider furthering your career now. You will of course command a salary of $%d if you do decide to move. It's worth thinking about.//",
    [3] = "Do you wish to take up a position at %s Hospital?",
  },
  [7] = {
    [1] = "Dear %s//",
    [2] = "Good day! The Ministry of Health would like to know whether you would reconsider your decision to stay at your current hospital. We appreciate that you have a lovely hospital, but feel that you would do very well to accept a more challenging post, and a salary of $%d.//",
    [3] = "Would you accept a position at %s Hospital?",
  },
  [8] = {
    [1] = "Dear %s//",
    [2] = "Hello once more. You responded in the negative to our last letter, offering you a supreme position with a new hospital, and an increased salary of $%d. We feel, however, that you should reconsider this decision. We've got the perfect job for you, you see.//",
    [3] = "Will you take a post at %s Hospital? Please?",
  },
  [9] = {
    [1] = "Dear %s//",
    [2] = "You have proved yourself to be the best hospital administrator in medicine's long and chequered history. Such a momentous achievement cannot go unrewarded, so we would like to offer you the post of Supreme Chief of All Hospitals. This is an honorary job, and comes with a salary of $%d. You will be given a tickertape parade, and people will show their appreciation wherever you go.//",
    [3] = "Thank you for all you have done. May you enjoy a long semi-retirement.//",
    [4] = "",
  },
  [10] = {
    [1] = "Dear %s//",
    [2] = "Congratulations on successfully running every hospital we assigned you to. Such a superb performance qualifies you for the freedom of all the world's cities. You are to be given a pension of $%d, plus a limousine, and all we ask is that you travel from city to city, meeting your adoring public and promoting the work of all hospitals everywhere.//",
    [3] = "We are all proud of you. There isn't one among us who doesn't feel grateful for your hard work saving lives.//",
    [4] = "",
  },
  [11] = {
    [1] = "Dear %s//",
    [2] = "Your career has been exemplary, and you are an inspiration to all of us. Thank you for running so many hospitals and doing so well in every job. We would like to grant you a lifetime salary of $%d, and would ask simply that you travel by official open-topped car from city to city, giving lectures about how you achieved so much so fast.//",
    [3] = "You are an example to every right-thinking person, and without exception, everybody in the world regards you as a supreme asset.//",
    [4] = "",
  },
  [12] = {
    [1] = "Dear %s//",
    [2] = "Your successful career as the best hospital administrator since Moses is nearing an end. However, such has been your impact on the cosy world of medicine, the Ministry would like to offer you a salary of $%d simply to appear on our behalf, opening fetes, launching ships and doing chat shows. The whole world is clamouring for you, and it would be great PR for us all!//",
    [3] = "Please accept this position. If won't be hard work, and we will provide you with a car and police escort wherever you go.//",
    [4] = "",
  },
  custom_level_completed = "Well done! You've completed all goals on this custom level!",
  dear_player = "Dear %s",
  return_to_main_menu = "Would you like to return to the main menu or continue playing?",
}
high_score = {
  categories = {
    deaths = "DEATH COUNT",
    total_value = "TOTAL VALUE",
    money = "RICHEST",
    cures = "CURE COUNT",
    visitors = "MOST VISITORS",
    staff_number = "MOST STAFF",
    cure_death_ratio = "CURES DEATHS RATIO",
    patient_happiness = "CUSTOMER SATISFACTION",
    staff_happiness = "STAFF SATISFACTION",
    salary = "HIGHEST SALARY",
    clean = "CLEANLINESS",
  },
  player = "PLAYER",
  score = "SCORE",
  pos = "POS",
  best_scores = "HALL OF FAME",
  worst_scores = "HALL OF SHAME",
  killed = "Killed",
}
menu_file_save = {
  [1] = "  GAME 1  ",
  [2] = "  GAME 2  ",
  [3] = "  GAME 3  ",
  [4] = "  GAME 4  ",
  [5] = "  GAME 5  ",
  [6] = "  GAME 6  ",
  [7] = "  GAME 7  ",
  [8] = "  GAME 8  ",
}
build_room_window = {
  pick_room_type = "Pick Room Type",
  pick_department = "Pick Department",
  cost = "Cost: ",
}
menu = {
  debug = "  DEBUG  ",
  display = "  DISPLAY  ",
  file = "  FILE  ",
  options = "  OPTIONS  ",
  charts = "  CHARTS  ",
}






----------------------------  CorsixTH STRINGS  -----------------------------
-- new strings from english.lua
-----------------------------------------------------------------------------

-------------------------------  OVERRIDE  ----------------------------------
adviser.warnings.money_low = "Your money is getting low!" -- Funny. Exists in German translation, but not existent in english?
-- TODO: tooltip.graphs.reputation -- this tooltip talks about hospital value. Actually it should say reputation.
-- TODO: tooltip.status.close -- it's called status window, not overview window.

-- tooltip.staff_list.next_person, prev_person is rather next/prev page (also in german, maybe more languages?)
tooltip.staff_list.next_person = "Show next page"
tooltip.staff_list.prev_person = "Show previous page"
tooltip.status.reputation = "Your Reputation should not be less than %d. Currently it's %d"
tooltip.status.balance = "Your bank balance should not be less than %d. Currently it's %d"

-- The originals of these two contain one space too much
fax.emergency.cure_not_possible_build = "You will need to build a %s"
fax.emergency.cure_not_possible_build_and_employ = "You will need to build a %s and employ a %s"
fax.emergency.num_disease = "There are %d people with %s and they require immediate attention."
adviser.goals.lose.kill = "Kill another %d patients to lose the level!"

-- Improve tooltips in staff window to mention hidden features
tooltip.staff_window.face = "This person's face - click to open management screen"
tooltip.staff_window.center_view = "Left click to zoom to staff, right click to cycle through staff members"

-- These strings are missing in some versions of TH (unpatched?)
confirmation.restart_level = "Are you sure you want to restart the level?"
-- TODO adviser.multiplayer.objective_completed
-- TODO adviser.multiplayer.objective_failed

-- A small error in the introduction text of level 2
introduction_texts.level2[6] = "Aim for a reputation of 300 a bank balance of $10,000 and 40 people cured."

-------------------------------  NEW STRINGS  -------------------------------
date_format = {
  daymonth = "%1% %2:months%",
}

object.litter = "Litter"
tooltip.objects.litter = "Litter: Left on the floor by a patient because he did not find a bin to throw it in."

tooltip.fax.close = "Close this window without deleting the message"
tooltip.message.button = "Left click to open message"
tooltip.message.button_dismiss = "Left click to open message, right click to dismiss it"
tooltip.casebook.cure_requirement.hire_staff = "You need to employ staff to handle this treatment"
tooltip.casebook.cure_type.unknown = "You do not yet know how to treat this disease"
tooltip.research_policy.no_research = "No research is being carried out in this category at the moment"
tooltip.research_policy.research_progress = "Progress towards the next discovery in this category: %1%/%2%"

menu_options = {
  lock_windows = "  LOCK WINDOWS  ",
  edge_scrolling = "  EDGE SCROLLING  ",
  settings = "  SETTINGS  ",
  adviser_disabled = "  ADVISER  ",
}

menu_options_game_speed = {
  pause               = "  (P) PAUSE  ",
  slowest             = "  (1) SLOWEST  ",
  slower              = "  (2) SLOWER  ",
  normal              = "  (3) NORMAL  ",
  max_speed           = "  (4) MAX SPEED  ",
  and_then_some_more  = "  (5) AND THEN SOME MORE  ",
}

-- The demo does not contain this string
menu_file.restart = "  RESTART  "

menu_debug = {
  jump_to_level               = "  JUMP TO LEVEL  ",
  transparent_walls           = "  (X) TRANSPARENT WALLS  ",
  limit_camera                = "  LIMIT CAMERA  ",
  disable_salary_raise        = "  DISABLE SALARY RAISE  ",
  make_debug_fax              = "  (F8) MAKE DEBUG FAX  ",
  make_debug_patient          = "  (F9) MAKE DEBUG PATIENT  ",
  cheats                      = "  (F11) CHEATS  ",
  lua_console                 = "  (F12) LUA CONSOLE  ",
  calls_dispatcher            = "  CALLS DISPATCHER  ",
  dump_strings                = "  DUMP STRINGS  ",
  dump_gamelog                = "  (CTRL+D) DUMP GAME LOG  ",
  map_overlay                 = "  MAP OVERLAY  ",
  sprite_viewer               = "  SPRITE VIEWER  ",
}
menu_debug_overlay = {
  none                        = "  NONE  ",
  flags                       = "  FLAGS  ",
  positions                   = "  POSITIONS  ",
  heat                        = "  TEMPERATURE  ",
  byte_0_1                    = "  BYTE 0 & 1  ",
  byte_floor                  = "  BYTE FLOOR  ",
  byte_n_wall                 = "  BYTE N WALL  ",
  byte_w_wall                 = "  BYTE W WALL  ",
  byte_5                      = "  BYTE 5  ",
  byte_6                      = "  BYTE 6  ",
  byte_7                      = "  BYTE 7  ",
  parcel                      = "  PARCEL  ",
}
adviser = {
  room_forbidden_non_reachable_parts = "Placing the room in this location would result in parts of the hospital not being reachable.",
  warnings = {
    no_desk = "You should build a reception desk and hire a receptionist at some point!",
    no_desk_1 = "If you want patients to come to your hospital, you will need to hire a receptionist and build her a desk to work at!",
    no_desk_2 = "Well done, that must be a world record: nearly a year and no patients! If you want to continue as Manager of this hospital, you will need to hire a receptionist and build a reception desk for her to work from!",
    no_desk_3 = "That's just brilliant, nearly a year and you don't have a staffed reception! How do you expect to get any patients, now get it sorted out and stop messing around!",
    cannot_afford = "You don't have enough money in the bank to hire that person!", -- I can't see anything like this in the original strings
    falling_1 = "Hey! that is not funny, watch where you click that mouse; someone could get hurt!",
    falling_2 = "Stop messing about, how would you like it?",
    falling_3 = "Ouch, that had to hurt, someone call a Doctor!",
    falling_4 = "This is an Hospital, not a Theme Park!",
    falling_5 = "This is not the place for knocking people over, they're ill you know!",
    falling_6 = "This is not a bowling alley, sick people should not be treated like that!"
  },
  cheats = {  
    th_cheat = "Congratulations, you have unlocked cheats!",
    crazy_on_cheat = "Oh no! All doctors have gone crazy!",
    crazy_off_cheat = "Phew... the doctors regained their sanity.",
    roujin_on_cheat = "Roujin's challenge activated! Good luck...",
    roujin_off_cheat = "Roujin's challenge deactivated.",
    hairyitis_cheat = "Hairyitis cheat activated!",
    hairyitis_off_cheat = "Hairyitis cheat deactivated.",
    bloaty_cheat = "Bloaty Head cheat activated!",
    bloaty_off_cheat = "Bloaty Head cheat deactivated.",
  },
}

dynamic_info.patient.actions.no_gp_available = "Waiting for you to build a GP's office"
dynamic_info.staff.actions.heading_for = "Heading for %s"
dynamic_info.staff.actions.fired = "Fired"

progress_report.free_build = "FREE BUILD"

fax = {
  choices = {
    return_to_main_menu = "Return to the main menu",
    accept_new_level = "Move on to the next level",
    decline_new_level = "Continue playing a while longer",
  },
  emergency = {
    num_disease_singular = "There is 1 person with %s and they require immediate attention.",
    free_build = "If you are successful your reputation will increase but if you fail your reputation will be seriously dented.",
  },
  vip_visit_result = {
    remarks = {
      free_build = {
        "It is a very nice hospital you have there! Not very hard to get it working without money limitations though, eh?",
        "I'm no economist, but I think I could run this hospital too if you know what I mean...",
        "A very well run hospital. Watch out for the recession though! Right... you didn't have to worry about that.",
      }
    }
  }
}

letter = {
  dear_player = "Dear %s",
  custom_level_completed = "Well done! You've completed all goals on this custom level!",
  return_to_main_menu = "Would you like to return to the main menu or continue playing?",
}

install = {
  title = "--------------------------------- CorsixTH Setup ---------------------------------",
  th_directory = "CorsixTH needs a copy of the data files from the original Theme Hospital game (or demo) in order to run. Please use the below selector to locate the Theme Hospital install directory.",
  exit = "Exit",
}

misc.not_yet_implemented = "(not yet implemented)"
misc.no_heliport = "Either no diseases have been discovered yet, or there is no heliport on this map.  It might be that you need to build a reception desk and hire a receptionist"

main_menu = {
  new_game = "Campaign",
  custom_level = "Single Scenario",
  load_game = "Load Game",
  options = "Options",
  savegame_version = "Savegame version: ",
  version = "Version: ",
  exit = "Exit",
}

tooltip.main_menu = {
  new_game = "Start the first level on the campaign",
  custom_level = "Build your hospital in a single scenario",
  load_game = "Load a saved game",
  options = "Tweak various settings",
  exit = "No, no, please don't leave!",
}

load_game_window = {
  caption = "Load Game",
}

tooltip.load_game_window = {
  load_game = "Load game %s",
  load_game_number = "Load game %d",
  load_autosave = "Load autosave",
}

custom_game_window = {
  caption = "Custom Game",
  free_build = "Free Build",
}

tooltip.custom_game_window = {
  start_game_with_name = "Load the level %s",
  free_build = "Tick this box if you want to play without money or winning and losing conditions",
}

save_game_window = {
  caption = "Save Game",
  new_save_game = "New Savegame",
}

tooltip.save_game_window = {
  save_game = "Overwrite savegame %s",
  new_save_game = "Enter name for a new savegame",
}

menu_list_window = {
  name = "Name",
  save_date = "Modified",
  back = "Back",
}

tooltip.menu_list_window = {
  name = "Click here to sort the list by name",
  save_date = "Click here to sort the list by last modification date",
  back = "Close this window",
}

options_window = {
  fullscreen = "Fullscreen",
  width = "Width",
  height = "Height",
  change_resolution = "Change resolution",
  browse = "Browse...",
  new_th_directory = "Here you can specify a new Theme Hospital installation directory. As soon as you choose the new directory the game will be restarted.",
  cancel = "Cancel",
  back = "Back",
}

tooltip.handyman_window = {
  parcel_select = "The parcel where the handyman accepts tasks, click to change setting"
}

handyman_window = {
  all_parcels = "All parcels",
  parcel = "Parcel"
}

tooltip.options_window = {
  fullscreen_button = "Click to toggle fullscreen mode",
  width = "Enter desired screen width",
  height = "Enter desired screen height",
  change_resolution = "Change the window resolution to the dimensions entered on the left",
  language = "Select %s as language",
  original_path = "The currently chosen directory of the original Theme Hospital installation",
  browse = "Browse for another location of a Theme Hospital installation",
  back = "Close the options window",
}

new_game_window = {
  easy = "Junior (Easy)",
  medium = "Doctor (Medium)",
  hard = "Consultant (Hard)",
  tutorial = "Tutorial",
  cancel = "Cancel",
}

tooltip.new_game_window = {
  easy = "If you are new to simulation games this is the option for you",
  medium = "This is the middle way to go if you are unsure what to choose",
  hard = "If you are used to this kind of game and want more of a challenge, pick this option",
  tutorial = "If you want some help to get started once in the game, tick this box",
  tutorial = "Tutorial",
  cancel = "Oh, I didn't really mean to start a new game!",
}

lua_console = {
  execute_code = "Execute",
  close = "Close",
}

tooltip.lua_console = {
  textbox = "Enter Lua code to run here",
  execute_code = "Run the code you have entered",
  close = "Close the console",
}

errors = {
  dialog_missing_graphics = "Sorry, the demo data files don't contain this dialog.",
  save_prefix = "Error while saving game: ",
  load_prefix = "Error while loading game: ",
  map_file_missing = "Could not find the map file %s for this level!",
  minimum_screen_size = "Please enter a screen size of at least 640x480.",
  maximum_screen_size = "Please enter a screen size of at most 3000x2000.",
  unavailable_screen_size = "The screen size you requested is not available in fullscreen mode.",
}

confirmation = {
  needs_restart = "Changing this setting requires CorsixTH to restart. Any unsaved progress will be lost. Are you sure you want to do this?",
  abort_edit_room = "You are currently building or editing a room. If all required objects are placed it will be finished, but otherwise it will be deleted. Continue?",
}

information = {
  custom_game = "Welcome to CorsixTH. Have fun with this custom map!",
  no_custom_game_in_demo = "Sorry, but in the demo version you can't play any custom maps.",
  cannot_restart = "Unfortunately this custom game was saved before the restart feature was implemented.",
  very_old_save = "There have been a lot of updates to the game since you started this level. To be sure that all features work as intended please consider restarting it.",
  level_lost = {
    "Bummer! You failed the level. Better luck next time!",
    "The reason you lost:",
    reputation = "Your reputation fell below %d.",
    balance = "Your bank balance fell below %d.",
    percentage_killed = "You killed more than %d percent of the patients.",
  },
}

tooltip.information = {
  close = "Close the information dialog",
}

totd_window = {
  tips = {
    "Every hospital needs a reception desk and a GP's office to get going. After that, it depends on what kind of patients are visiting your hospital. A pharmacy is always a good choice, though.",
    "Machines such as the Inflation need maintenance. Employ a handyman or two to repair your machines, or you'll risk your staff and patients getting hurt.",
    "After a while, your staff will get tired. Be sure to build a staff room, so they can relax.",
    "Place enough radiators to keep your staff and patients warm, or they will become unhappy. Use the town map to locate any spots in your hospital that need more heating.",
    "A doctor's skill level greatly influences the quality and speed of his diagnoses. Place a skilled doctor in your GP's office, and you won't need as many additional diagnosis rooms.",
    "Juniors and doctors can improve their skills by learning from a consultant in the training room. If the consultant has a special qualification (surgeon, psychiatrist or researcher), he will also pass on this knowledge to his pupil(s).",
    "Did you try to enter the European emergency number (112) into the fax machine? Make sure your sound is on!",
    "You can adjust some settings such as the resolution and language in the options window found both in the main menu and ingame.",
    "You selected a language other than English, but there's English text all over the place? Help us by translating missing texts into your language!",
    "The CorsixTH team is looking for reinforcements! Are you interested in coding, translating or creating graphics for CorsixTH? Contact us at our Forum, Mailing List or IRC Channel (corsix-th at freenode).",
    "If you find a bug, please report it at our bugtracker: th-issues.corsix.org",
    "Each level has certain requirements to fulfill before you can move on to the next one. Check the status window to see your progression towards the level goals.",
    "If you want to edit or remove an existing room, you can do so with the edit room button found in the bottom toolbar.",
    "In a horde of waiting patients, you can quickly find out which ones are waiting for a particular room by hovering over that room with your mouse cursor.",
    "Click on the door of a room to see its queue. You can do useful fine tuning here, such as reordering the queue or sending a patient to another room.",
    "Unhappy staff will ask for salary rises frequently. Make sure your staff is working in a comfortable environment to keep that from happening.",
    "Patients will get thirsty while waiting in your hospital, even more so if you turn up the heating! Place vending machines in strategic positions for some extra income.",
    "You can abort the diagnosis progress for a patient prematurely and guess the cure, if you already encountered the disease. Beware that this may increase the risk of a wrong cure, resulting in death for the patient.",
    "Emergencies can be a good source for some extra cash, provided that you have enough capacities to handle the emergency patients in time.",
  },
  previous = "Previous Tip",
  next = "Next Tip",
}

tooltip.totd_window = {
  previous = "Display the previous tip",
  next = "Display the next tip",
}

debug_patient_window = {
  caption = "Debug Patient",
}

cheats_window = {
  caption = "Cheats",
  warning = "Warning: You will not get any bonus points at the end of the level if you cheat!",
  cheated = {
    no = "Cheats used: No",
    yes = "Cheats used: Yes",
  },
  cheats = {
    money = "Money Cheat",
    all_research = "All Research Cheat",
    emergency = "Create Emergency",
    vip = "Create VIP",
    earthquake = "Create Earthquake",
    create_patient = "Create Patient",
    end_month = "End of Month",
    end_year = "End of Year",
    lose_level = "Lose Level",
    win_level = "Win Level",
  },
  close = "Close",
}

tooltip.cheats_window = {
  close = "Close the cheats dialog",
  cheats = {
    money = "Adds 10.000 to your bank balance.",
    all_research = "Completes all research.",
    emergency = "Creates an emergency.",
    vip = "Creates a VIP.",
    earthquake = "Creates an earthquake.",
    create_patient = "Creates a Patient at the map border.",
    end_month = "Jumps to the end of the month.",
    end_year = "Jumps to the end of the year.",
    lose_level = "Lose the current level.",
    win_level = "Win the current level.",
  }
}

introduction_texts = {
  demo = {
    "Welcome to the demo hospital!",
    "Unfortunately the demo version only contains this level (apart from custom levels). However, there is more than enough to do here to keep you busy for a while!",
    "You will encounter various diseases that require different rooms to cure. From time to time, emergencies may occur. And you will need to research additional rooms using a research room.",
    "Your goal is to earn $100,000, have a hospital value of $70,000 and a reputation of 700, while having cured at least 75% of your patients.",
    "Make sure your reputation does not fall below 300 and that you don't kill off more than 40% of your patients, or you will lose.",
    "Good luck!",
  },
}

calls_dispatcher = {
  -- Dispatcher description message. Visible in Calls Dispatcher dialog
  summary = "%d calls; %d assigned",
  staff = "%s - %s",
  watering = "Watering @ %d,%d",
  repair = "Repair %s",
  close = "Close",
}

tooltip.calls_dispatcher = {
  task = "List of tasks - click task to open assigned staff's window and scroll to location of task",
  assigned = "This box is marked if someone is assigned to the corresponding task.",
  close = "Close the calls dispatcher dialog",
}
